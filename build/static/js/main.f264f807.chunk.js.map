{"version":3,"sources":["MetaMaskGuide.js","components/ScanQR.js","pages/Admin/CreateUser.js","components/LoadComp.js","components/EmployeeCard.js","pages/Admin/AllEmployees.js","components/OrgEndCard.js","pages/Admin/AllOrganizationEndorser.js","components/LineChart.js","components/SkillCard.js","components/CodeforcesGraph.js","pages/Employee/Employee.js","components/GetCertificationModal.js","components/GetWorkExpModal.js","components/GetSkillsModals.js","components/GetEducationModal.js","components/GetEditFieldModal.js","firebase/firebase.js","firebase/api.js","pages/Employee/UpdateProfile.js","components/GetEmployeeModal.js","pages/OrganizationEndorser/Organization.js","pages/OrganizationEndorser/EndorseSkill.js","pages/OrganizationEndorser/EndorseSection.js","components/SearchEmp.js","components/SearchBar.js","components/GenererateQR.js","components/Navbar.js","pages/GetRoutes/GetEmployee.js","pages/GetRoutes/GetOrg.js","pages/NoRole/NoRole.js","components/GetInfoModal.js","components/ChatBody.js","components/NoChats.js","pages/NoRole/Notifications.js","pages/Admin/Notifications.js","pages/Employee/Notifications.js","pages/OrganizationEndorser/Notifications.js","App.js","reportWebVitals.js","index.js"],"names":["MetaMaskGuide","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_jsxs","Segment","placeholder","textAlign","style","alignSelf","justifySelf","maxWidth","margin","marginTop","color","children","_jsx","Image","src","width","centered","href","Button","Component","ScanQR","props","qrRef","useRef","_useState","useState","_useState2","_slicedToArray","scanRes","setScanRes","_useState3","_useState4","forward","setforward","handleError","err","console","log","handleScan","res","handleAddAddress","Modal","size","className","open","isOpen","Icon","name","float","marginRight","onClick","Header","icon","content","as","Content","height","marginLeft","marginBottom","QrReader","delay","onError","onScan","type","current","openImageDialog","ref","legacyMode","Actions","closeScanQRModal","CreateUser","_this","_len","length","args","Array","_key","call","concat","state","location","ethAddress","description","role","loading","errorMessage","scanQR","roleOptions","text","handleDropdownSelect","e","data","setState","handleChange","preventDefault","_defineProperty","target","id","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$state","web3","accounts","networkId","AdminData","admin","wrap","_context","prev","next","toast","error","abrupt","window","eth","getAccounts","sent","net","getId","Admin","networks","Contract","abi","address","methods","owner","registerUser","send","from","success","history","push","t0","message","stop","_x","_this2","_Fragment","this","Card","Form","Field","autoComplete","autoCorrect","onChange","Input","action","Dropdown","fluid","selection","options","Message","header","withRouter","LoadComp","xmlns","xmlnsXlink","background","display","shapeRendering","viewBox","preserveAspectRatio","transform","attributeName","values","keyTimes","dur","repeatCount","d","fill","EmployeeCard","employeedata","skills","certifications","workExps","educations","colour","readmore","loadcomp","componentDidMount","EmployeeContract","newEmployedata","Employee","employeeContractAddress","getSkills","getCertifications","getWorkExp","getEducation","getEmployeeInfo","overallEndorsement","endorsecount","_ref2","_callee2","_EmployeeContract$met","skillCount","newskills","_context2","getSkillCount","Promise","all","parseInt","map","ele","index","_EmployeeContract$met2","getSkillByIndex","forEach","certi","overall_percentage","experience","endorsed","endorser_address","review","_ref3","_callee3","_EmployeeContract$met3","certiCount","newcertifications","_context3","getCertificationCount","_EmployeeContract$met4","getCertificationByIndex","organization","score","_x2","_ref4","_callee4","_EmployeeContract$met5","workExpCount","newworkExps","_context4","getWorkExpCount","_EmployeeContract$met6","getWorkExpByIndex","work","startdate","enddate","_x3","_ref5","_callee5","_EmployeeContract$met7","educationCount","neweducation","_context5","getEducationCount","_EmployeeContract$met8","getEducationByIndex","institute","_x4","toEmployee","_this$state$employeed","_this$state$employeed2","_this$state$employeed3","_this$state$skills","_this$state$education","_this$state$certifica","_this$state$workExps","cursor","skill","border","education","certification","AllEmployees","employees","employeeCount","getEmployeeContractByIndex","_this$state$employees","employee","OrgEndCard","orgEndInfo","allEmployeesInOrg","OrgEndContract","orgEndData","OrgEnd","OrgEndContractAddress","getOrganizationInfo","totalEmployees","getEmployeeByIndex","_this$state$orgEndInf","_this$state$orgEndInf2","_this$state$orgEndInf3","_this$state$orgEndInf4","_this$state$allEmploy","borderStyle","borderColor","AllOrganizationEndorser","orgends","orgendCount","OrganizationEndorserCount","getOrganizationContractByIndex","_this$state$orgends","orgend","LineChart","newdata","setTimeout","_this$props$overallEn","labels","_toConsumableArray","keys","datasets","label","backgroundColor","scales","yAxes","ticks","beginAtZero","Line","SkillCard","removeSkill","_admin$methods","getEmployeeContractByAddress","deleteSkill","reload","update","visible","class","CardContent","fontSize","fontWeight","wordBreak","CircularProgressbar","strokeWidth","styles","buildStyles","strokeLinecap","textSize","pathTransitionDuration","pathColor","Math","floor","random","textColor","trailColor","CodeforcesGraph","setdata","mxRating","setmxRating","useEffect","fetchdata","fetch","then","json","status","result","newarr","mx","newRating","newlabels","catch","legend","elements","points","radius","maintainAspectRatio","gridLines","EmployeePage","codeforces_res","endorseCount","_EmployeeContract$met9","_this$state$employeed4","Grid","Row","Column","paddingRight","opacity","workExp","GetCertificationModal","addCertification","closeCertificationModal","onSubmit","min","max","GetWorkExpModal","addWorkExp","GetSkillsModal","addSkill","GetEducationModal","addEducation","GetEditFieldModal","name1","description1","location1","editInfo","closeEditFieldModal","isDescription","firebase","apps","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","db","messageAdmin","info","collection","doc","add","_objectSpread","sender","receiver","timeStamp","Date","get","exists","set","reqWorkexpEndorsementFunc","workexp","req","reqEducationEndorsementFunc","reqCertiEndorsementFunc","_x5","UpdateProfile","certificationModal","workexpModal","skillmodal","educationmodal","editFieldModal","closeWorkExpModal","closeSkillModal","closeEducationModal","certificationVisibility","_ref6","_callee6","_admin$methods2","_EmployeeContract$met10","_context6","deleteCertification","workExpVisibility","_ref7","_callee7","org","_admin$methods3","_EmployeeContract$met11","_context7","deleteWorkExp","_x6","reqEducationEndorsement","_ref8","_callee8","_context8","_x7","reqCertiEndorsement","_ref9","_callee9","_context9","_x8","reqWorkexpEndorsement","_ref10","_callee10","_context10","_x9","_this$state$employeed5","_this$state$employeed6","_this$state$employeed7","GetEmployeeModal","employee_address","orgContractAddress","orgContract","getOrganizationContractByAddress","addEmployees","closeEmployeeModal","OrganizationEndorser","orgcontractAddress","employeemodal","getEmployees","_orgContract$methods","Organization","_orgContract$methods2","EndorseSkil","employee_address_skill","skill_name","skill_score","skill_review","skillError","skillLoading","handleSkillEndorse","SkillData","_skills$methods","Skills","endorseSkill","addEmployeeToSkill","floated","Endorse","section","certification_name","endorseEducation","endorseWorkExp","endorseCertification","SearchEmp","empAddress","emp","toRoute","_this$state2","_this$state2$employee","_this$state3","_this$state3$employee","_this$state4","_this$state4$employee","Dimmer","active","inverted","Loader","source","initialState","isLoading","results","SearchBar","skillData","skillLength","getSkillLength","_skills$methods2","getSkillsByIndex","skillname","_skills$methods3","currSkillLen","getTotalEmployeeInSkillByName","_skills$methods4","getEmployeeBySkillName","title","handleResultSelect","handleSearchChange","re","RegExp","_","escapeRegExp","filter","test","searchOptions","Search","aligned","onResultSelect","onSearchChange","debounce","leading","minWidth","GenererateQR","qr","QRCode","toDataURL","download","alt","closeQRModal","Navbar","activeItem","account","showQr","isEmployee","isOrganizationEndorser","handleItemClick","borderRadius","boxShadow","Menu","pointing","secondary","Item","Link","to","padding","justifyItems","alignItems","justifyContent","position","Label","GetEmployee","_this$props","_this$props$match","_this$props$match$par","match","params","GetOrg","orgAddress","NoRole","rows","GetInfoModal","createUser","_this$props$info","endorseEmployee","_this$props$info2","closeInfoModal","_this$props$info3","_this$props$info4","_this$props$info5","_this$props$info6","_this$props$info7","_this$props$info8","_this$props$info9","_this$props$info10","_this$props$info11","_this$props$info12","_this$props$info13","_this$props$info14","_this$props$info15","_this$props$info16","_this$props$info17","_this$props$info18","_this$props$info19","_this$props$info20","_this$props$info21","_this$props$info22","_this$props$info23","isEndorsementReq","Table","HeaderCell","borderTop","Body","Cell","senderDesign","receiverDesign","ChatBody","chats","infomaodal","orderBy","onSnapshot","snapshot","docs","sendMessage","handleKeyPress","_this$state$chats","avatar","matginLeft","flexDirection","overflow","paddingLeft","paddingTop","chat","_chat$timeStamp","toDate","toUTCString","labelPosition","onKeyPress","Nochats","Notifications","curr","conversations","genImg","setCurr","_this$state$conversat","borderRight","basic","celled","collapsing","maxHeight","overflowX","image","rounded","Subheader","NotificationsAdmin","NotificationsEmployee","NotificationsOrg","App","isMeta","setisMeta","setisEmployee","_useState5","_useState6","setaccount","_useState7","_useState8","setisOrganizationEndorser","_useState9","_useState10","isOwner","setisOwner","_useState11","_useState12","setloadcomp","loadBlockChainData","_isEmployee","_isOrganizationEndorser","func","ethereum","request","method","Web3","currentProvider","BrowserRouter","Container","ToastContainer","Switch","Route","path","exact","component","AdminPageCreate","EndorseSkill","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f264f807.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Segment, Button, Image } from \"semantic-ui-react\";\r\n\r\nexport default class MetaMaskGuide extends Component {\r\n  render() {\r\n    return (\r\n      <Segment\r\n        placeholder\r\n        textAlign=\"center\"\r\n        style={{\r\n          alignSelf: \"center\",\r\n          justifySelf: \"center\",\r\n          maxWidth: \"800px\",\r\n          margin: \"auto\",\r\n          marginTop: \"100px\",\r\n          color: \"black\",\r\n        }}\r\n      >\r\n        <Image\r\n          src=\"https://cdn.worldvectorlogo.com/logos/metamask.svg\"\r\n          width=\"200px\"\r\n          centered\r\n        />\r\n\r\n        <h1>Oops!.. Seems like you do not have metamask extension.</h1>\r\n        <h2>Please download it to proceed.</h2>\r\n        <p>\r\n          After the metamask set-up , create an account on <b>Rinkeby</b> test\r\n          network.\r\n        </p>\r\n        <a href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\">\r\n          <Button color=\"teal\">Download Metamask Extension</Button>\r\n        </a>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport \"./Modals.css\";\r\nimport QrReader from \"react-qr-reader\";\r\nimport { Button, Header, Icon, Modal } from \"semantic-ui-react\";\r\n\r\nfunction ScanQR(props) {\r\n  const qrRef = useRef(null);\r\n  const [scanRes, setScanRes] = useState(\"\");\r\n  const [forward, setforward] = useState(false);\r\n\r\n  const handleError = (err) => {\r\n    console.log(err);\r\n  };\r\n\r\n  const handleScan = (res) => {\r\n    if (res) {\r\n      setScanRes(res);\r\n      props.handleAddAddress(res);\r\n    }\r\n  };\r\n\r\n  const onUploadQR = () => {\r\n    qrRef.current.openImageDialog();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"tiny\" className=\"modal-des\" open={props?.isOpen}>\r\n      <Icon\r\n        name={\r\n          !forward\r\n            ? \"arrow alternate circle right outline\"\r\n            : \"arrow alternate circle left outline\"\r\n        }\r\n        size=\"big\"\r\n        style={{ float: \"right\", marginTop: \"30px\", marginRight: \"20px\" }}\r\n        onClick={() => setforward(!forward)}\r\n      />\r\n      <Header\r\n        className=\"modal-heading\"\r\n        icon=\"qrcode\"\r\n        content={!forward ? \"Upload QR\" : \"Scan QR\"}\r\n        as=\"h2\"\r\n      />\r\n      {!forward ? (\r\n        <Modal.Content className=\"modal-content pos-middle-qr\">\r\n          <Button\r\n            type=\"button\"\r\n            icon=\"upload\"\r\n            content=\"Upload QR\"\r\n            onClick={onUploadQR}\r\n          />\r\n          <div\r\n            style={{\r\n              width: \"200px\",\r\n              height: \"200px\",\r\n              textAlign: \"center\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              marginTop: \"20px\",\r\n              marginBottom: \"-5px\",\r\n            }}\r\n          >\r\n            <QrReader\r\n              ref={qrRef}\r\n              delay={300}\r\n              onError={handleError}\r\n              onScan={handleScan}\r\n              legacyMode\r\n            />\r\n          </div>\r\n          <h3>Uploaded Address: {scanRes}</h3>\r\n        </Modal.Content>\r\n      ) : (\r\n        <Modal.Content className=\"modal-content pos-middle-qr\">\r\n          <div\r\n            style={{\r\n              width: \"200px\",\r\n              height: \"200px\",\r\n              textAlign: \"center\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              marginTop: \"20px\",\r\n              marginBottom: \"-5px\",\r\n            }}\r\n          >\r\n            <QrReader delay={300} onError={handleError} onScan={handleScan} />\r\n          </div>\r\n          <h3>Scanned Address: {scanRes}</h3>\r\n        </Modal.Content>\r\n      )}\r\n      <Modal.Actions className=\"modal-actions\">\r\n        <Button\r\n          className=\"close-button\"\r\n          type=\"button\"\r\n          color=\"red\"\r\n          icon=\"times\"\r\n          content=\"Close\"\r\n          onClick={() => props?.closeScanQRModal()}\r\n        />\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ScanQR;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Dropdown,\r\n  Form,\r\n  Input,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\nimport Admin from \"../../abis/Admin.json\";\r\nimport { toast } from \"react-toastify\";\r\nimport ScanQR from \"../../components/ScanQR\";\r\nimport \"./Admin.css\";\r\n\r\nclass CreateUser extends Component {\r\n  state = {\r\n    name: \"\",\r\n    location: \"\",\r\n    ethAddress: \"\",\r\n    description: \"\",\r\n    role: 0,\r\n    loading: false,\r\n    errorMessage: \"\",\r\n    scanQR: false,\r\n  };\r\n\r\n  roleOptions = [\r\n    {\r\n      key: \"0\",\r\n      text: \"Not Yet Selected\",\r\n      value: \"0\",\r\n    },\r\n    {\r\n      key: \"1\",\r\n      text: \"Candidate\",\r\n      value: \"1\",\r\n    },\r\n    {\r\n      key: \"2\",\r\n      text: \"OrganizationEndorser\",\r\n      value: \"2\",\r\n    },\r\n  ];\r\n\r\n  handleDropdownSelect = (e, data) => {\r\n    this.setState({ role: data.value });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { ethAddress, name, location, role, description } = this.state;\r\n    if (!name || !location || !description || !role || !ethAddress) {\r\n      toast.error(\"Please fill all the fields!!\");\r\n      return;\r\n    }\r\n    this.setState({ loading: true, errorMessage: \"\" });\r\n    const web3 = window.web3;\r\n    const accounts = await web3.eth.getAccounts();\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n\r\n      const owner = await admin.methods.owner().call();\r\n      if (owner !== accounts[0]) {\r\n        this.setState({\r\n          errorMessage: \"Sorry! You are not the Admin!!\",\r\n          loading: false,\r\n        });\r\n        return;\r\n      }\r\n      try {\r\n        await admin.methods\r\n          .registerUser(ethAddress, name, location, description, role)\r\n          .send({ from: accounts[0] });\r\n        toast.success(\"New user registered succressfully!!!!\");\r\n        this.props.history.push(\r\n          `${role === \"1\" ? \"/\" : \"/all-organization-endorser\"}`\r\n        );\r\n        this.setState({\r\n          name: \"\",\r\n          location: \"\",\r\n          ethAddress: \"\",\r\n          description: \"\",\r\n          role: 0,\r\n        });\r\n      } catch (err) {\r\n        this.setState({ errorMessage: err.message });\r\n      }\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  closeScanQRModal = () => {\r\n    this.setState({ scanQR: false });\r\n  };\r\n\r\n  handleAddAddress = (res) => {\r\n    this.setState({ ethAddress: res });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ScanQR\r\n          isOpen={this.state.scanQR}\r\n          closeScanQRModal={this.closeScanQRModal}\r\n          handleAddAddress={this.handleAddAddress}\r\n        />\r\n        <div className=\"create-user\">\r\n          <Card className=\"card-style\">\r\n            <Card.Content>\r\n              <Card.Header centered>\r\n                <h2 className=\"card-heading\">Register</h2>\r\n              </Card.Header>\r\n              <hr className=\"horizontal-line\"></hr>\r\n              <br></br>\r\n              <Form error={!!this.state.errorMessage}>\r\n                <Form.Field className=\"form-inputs-admin\">\r\n                  <input\r\n                    id=\"name\"\r\n                    placeholder=\"Name\"\r\n                    autoComplete=\"off\"\r\n                    autoCorrect=\"off\"\r\n                    value={this.state.name}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Field>\r\n                <br />\r\n                <Form.Field className=\"form-inputs-admin\">\r\n                  <input\r\n                    id=\"location\"\r\n                    placeholder=\"Location\"\r\n                    autoComplete=\"off\"\r\n                    autoCorrect=\"off\"\r\n                    value={this.state.location}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Field>\r\n                <br />\r\n                <Form.Field className=\"form-inputs-admin\">\r\n                  <input\r\n                    id=\"description\"\r\n                    placeholder=\"Description\"\r\n                    autoComplete=\"off\"\r\n                    autoCorrect=\"off\"\r\n                    value={this.state.description}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Field>\r\n                <br />\r\n                <Form.Field className=\"form-inputs-admin\">\r\n                  <Input action className=\"form-inputs-admin\">\r\n                    <input\r\n                      id=\"ethAddress\"\r\n                      placeholder=\"0x0\"\r\n                      autoComplete=\"off\"\r\n                      autoCorrect=\"off\"\r\n                      value={this.state.ethAddress}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <Button\r\n                      type=\"button\"\r\n                      content=\"QR\"\r\n                      icon=\"qrcode\"\r\n                      onClick={() => this.setState({ scanQR: true })}\r\n                    />\r\n                  </Input>\r\n                </Form.Field>\r\n                <br />\r\n                <Form.Field className=\"form-inputs-admin\">\r\n                  <Dropdown\r\n                    placeholder=\"Select Role\"\r\n                    fluid\r\n                    selection\r\n                    options={this.roleOptions}\r\n                    onChange={this.handleDropdownSelect}\r\n                  />\r\n                </Form.Field>\r\n                <br />\r\n                <Message\r\n                  error\r\n                  header=\"Oops!!\"\r\n                  content={this.state.errorMessage}\r\n                />\r\n                <br />\r\n                <div className=\"button-holder\">\r\n                  <Button\r\n                    className=\"button-css-admin\"\r\n                    type=\"submit\"\r\n                    onClick={this.handleSubmit}\r\n                    loading={this.state.loading}\r\n                  >\r\n                    Register\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </Card.Content>\r\n          </Card>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CreateUser);\r\n","import React from \"react\";\r\nimport \"./LoadComp.css\";\r\n\r\nfunction LoadComp() {\r\n  return (\r\n    <div className=\"load-comp\">\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n        style={{\r\n          margin: \"auto\",\r\n          background: \"none\",\r\n          display: \"block\",\r\n          shapeRendering: \"auto\",\r\n        }}\r\n        width=\"60px\"\r\n        height=\"60px\"\r\n        viewBox=\"0 0 100 100\"\r\n        preserveAspectRatio=\"xMidYMid\"\r\n      >\r\n        <g transform=\"translate(50 50)\">\r\n          <g>\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"rotate\"\r\n              values=\"0;45\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"0.16129032258064516s\"\r\n              repeatCount=\"indefinite\"\r\n            ></animateTransform>\r\n            <path\r\n              d=\"M25.607616054603756 -4.5 L33.60761605460375 -4.5 L33.60761605460375 4.5 L25.607616054603756 4.5 A26 26 0 0 1 21.289299477571284 14.925338446892354 L21.289299477571284 14.925338446892354 L26.946153727063663 20.582192696384734 L20.582192696384734 26.946153727063663 L14.925338446892354 21.289299477571284 A26 26 0 0 1 4.500000000000003 25.607616054603756 L4.500000000000003 25.607616054603756 L4.500000000000003 33.60761605460375 L-4.5 33.60761605460375 L-4.5 25.607616054603756 A26 26 0 0 1 -14.92533844689235 21.289299477571284 L-14.92533844689235 21.289299477571284 L-20.58219269638473 26.946153727063663 L-26.946153727063663 20.582192696384737 L-21.289299477571284 14.925338446892356 A26 26 0 0 1 -25.607616054603756 4.500000000000005 L-25.607616054603756 4.500000000000005 L-33.60761605460375 4.500000000000006 L-33.60761605460375 -4.499999999999997 L-25.607616054603756 -4.499999999999998 A26 26 0 0 1 -21.289299477571287 -14.92533844689235 L-21.289299477571287 -14.92533844689235 L-26.946153727063667 -20.58219269638473 L-20.582192696384737 -26.946153727063663 L-14.925338446892356 -21.289299477571284 A26 26 0 0 1 -4.500000000000006 -25.607616054603753 L-4.500000000000006 -25.607616054603753 L-4.500000000000008 -33.60761605460375 L4.499999999999996 -33.60761605460375 L4.499999999999997 -25.607616054603756 A26 26 0 0 1 14.92533844689235 -21.289299477571287 L14.92533844689235 -21.289299477571287 L20.58219269638473 -26.946153727063667 L26.946153727063663 -20.58219269638474 L21.289299477571284 -14.92533844689236 A26 26 0 0 1 25.607616054603753 -4.500000000000008 M0 -18A18 18 0 1 0 0 18 A18 18 0 1 0 0 -18\"\r\n              fill=\"#ffffff\"\r\n            ></path>\r\n          </g>\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadComp;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Card } from \"semantic-ui-react\";\r\nimport Employee from \"../abis/Employee.json\";\r\nimport \"./EmployeeCard.css\";\r\nimport LoadComp from \"./LoadComp\";\r\n\r\nclass EmployeeCard extends Component {\r\n  state = {\r\n    employeedata: {},\r\n    skills: [],\r\n    certifications: [],\r\n    workExps: [],\r\n    educations: [],\r\n    colour: [\"#b6e498\", \"#61dafb\", \"#764abc\", \"#83cd29\", \"#00d1b2\"],\r\n    readmore: false,\r\n    loadcomp: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const web3 = window.web3;\r\n    const EmployeeContract = await new web3.eth.Contract(\r\n      Employee.abi,\r\n      this.props.employeeContractAddress\r\n    );\r\n    this.getSkills(EmployeeContract);\r\n    this.getCertifications(EmployeeContract);\r\n    this.getWorkExp(EmployeeContract);\r\n    this.getEducation(EmployeeContract);\r\n    const employeedata = await EmployeeContract.methods\r\n      .getEmployeeInfo()\r\n      .call();\r\n    const newEmployedata = {\r\n      ethAddress: employeedata[0],\r\n      name: employeedata[1],\r\n      location: employeedata[2],\r\n      description: employeedata[3],\r\n      overallEndorsement: employeedata[4],\r\n      endorsecount: employeedata[5],\r\n    };\r\n    this.setState({ employeedata: newEmployedata });\r\n  };\r\n\r\n  getSkills = async (EmployeeContract) => {\r\n    const skillCount = await EmployeeContract?.methods?.getSkillCount().call();\r\n    const skills = await Promise.all(\r\n      Array(parseInt(skillCount))\r\n        .fill()\r\n        .map((ele, index) =>\r\n          EmployeeContract?.methods?.getSkillByIndex(index).call()\r\n        )\r\n    );\r\n\r\n    var newskills = [];\r\n    skills.forEach((certi) => {\r\n      newskills.push({\r\n        name: certi[0],\r\n        overall_percentage: certi[1],\r\n        experience: certi[2],\r\n        endorsed: certi[3],\r\n        endorser_address: certi[4],\r\n        review: certi[5],\r\n      });\r\n      return;\r\n    });\r\n\r\n    this.setState({ skills: newskills });\r\n  };\r\n\r\n  getCertifications = async (EmployeeContract) => {\r\n    const certiCount = await EmployeeContract?.methods\r\n      ?.getCertificationCount()\r\n      .call();\r\n    const certifications = await Promise.all(\r\n      Array(parseInt(certiCount))\r\n        .fill()\r\n        .map((ele, index) =>\r\n          EmployeeContract?.methods?.getCertificationByIndex(index).call()\r\n        )\r\n    );\r\n    var newcertifications = [];\r\n    certifications.forEach((certi) => {\r\n      newcertifications.push({\r\n        name: certi[0],\r\n        organization: certi[1],\r\n        score: certi[2],\r\n        endorsed: certi[3],\r\n      });\r\n      return;\r\n    });\r\n    this.setState({ certifications: newcertifications });\r\n  };\r\n\r\n  getWorkExp = async (EmployeeContract) => {\r\n    const workExpCount = await EmployeeContract?.methods\r\n      ?.getWorkExpCount()\r\n      .call();\r\n    const workExps = await Promise.all(\r\n      Array(parseInt(workExpCount))\r\n        .fill()\r\n        .map((ele, index) =>\r\n          EmployeeContract?.methods?.getWorkExpByIndex(index).call()\r\n        )\r\n    );\r\n\r\n    var newworkExps = [];\r\n    workExps.forEach((work) => {\r\n      newworkExps.push({\r\n        role: work[0],\r\n        organization: work[1],\r\n        startdate: work[2],\r\n        enddate: work[3],\r\n        endorsed: work[4],\r\n        description: work[5],\r\n      });\r\n      return;\r\n    });\r\n\r\n    this.setState({ workExps: newworkExps });\r\n  };\r\n\r\n  getEducation = async (EmployeeContract) => {\r\n    const educationCount = await EmployeeContract?.methods\r\n      ?.getEducationCount()\r\n      .call();\r\n    const educations = await Promise.all(\r\n      Array(parseInt(educationCount))\r\n        .fill()\r\n        .map((ele, index) =>\r\n          EmployeeContract?.methods?.getEducationByIndex(index).call()\r\n        )\r\n    );\r\n    var neweducation = [];\r\n    educations.forEach((certi) => {\r\n      neweducation.push({\r\n        institute: certi[0],\r\n        startdate: certi[1],\r\n        enddate: certi[2],\r\n        endorsed: certi[3],\r\n        description: certi[4],\r\n      });\r\n      return;\r\n    });\r\n    this.setState({ educations: neweducation });\r\n  };\r\n\r\n  toEmployee = () => {\r\n    this.props.history.push(\r\n      `/getemployee/${this.props.employeeContractAddress}`\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return this.state.loadcomp ? (\r\n      <LoadComp />\r\n    ) : (\r\n      <Card className=\"employee-card\">\r\n        <Card.Content>\r\n          <Card.Header onClick={this.toEmployee} style={{ cursor: \"pointer\" }}>\r\n            <span>{this.state.employeedata?.name}</span>\r\n            <small>{this.state.employeedata.ethAddress}</small>\r\n          </Card.Header>\r\n          <br></br>\r\n          <div>\r\n            <p>\r\n              <em>Location : </em>\r\n              <span style={{ color: \"#000000\" }}>\r\n                {this.state.employeedata?.location}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <em>Description :</em>\r\n            <p style={{ color: \"#000000\" }}>\r\n              {this.state.employeedata?.description}\r\n            </p>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <em>Skills:</em>\r\n            <div className=\"skill-holder\">\r\n              {this.state.skills?.map((skill, index) => (\r\n                <div\r\n                  className=\"skill-design\"\r\n                  style={{\r\n                    color: \"#000000\",\r\n                    border: `1px solid ${this.state.colour[index % 5]}`,\r\n                  }}\r\n                >\r\n                  <p>{skill.name}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <br />\r\n          {this.state.readmore ? (\r\n            <div>\r\n              <div>\r\n                <em>Education:</em>\r\n                <div className=\"education\">\r\n                  {this.state.educations?.map((education, index) => (\r\n                    <div\r\n                      className=\"education-design\"\r\n                      style={{ color: \"#000000\" }}\r\n                    >\r\n                      <div>\r\n                        <p>{education.description}</p>\r\n                        <small>{education.institute}</small>\r\n                      </div>\r\n                      <div>\r\n                        <small>\r\n                          <em>\r\n                            {education.startdate} - {education.enddate}\r\n                          </em>\r\n                        </small>\r\n                        <p\r\n                          style={{\r\n                            color: education.endorsed ? \"#25ff04\" : \"#fe0000\",\r\n                            // opacity: \"0.7\",\r\n                          }}\r\n                        >\r\n                          {education.endorsed ? \"Endorsed\" : \"Not Yet Endorsed\"}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <div>\r\n                <em>Certifications:</em>\r\n                <div className=\"certifications\">\r\n                  {this.state.certifications?.map((certification, index) => (\r\n                    <div\r\n                      className=\"certification-design\"\r\n                      style={{ color: \"#000000\" }}\r\n                    >\r\n                      <div>\r\n                        <p>{certification.name}</p>\r\n                        <small>{certification.organization}</small>\r\n                      </div>\r\n                      <div>\r\n                        <p>\r\n                          <em>Score: {certification.score}</em>\r\n                        </p>\r\n                        <p\r\n                          style={{\r\n                            color: certification.endorsed\r\n                              ? \"#25ff04\"\r\n                              : \"#fe0000\",\r\n                            //opacity: \"0.7\",\r\n                          }}\r\n                        >\r\n                          {certification.endorsed\r\n                            ? \"Verified\"\r\n                            : \"Not Yet Verified\"}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <div>\r\n                <em>Work Experience:</em>\r\n                <div className=\"workexp\">\r\n                  {this.state.workExps?.map((work, index) => (\r\n                    <div\r\n                      className=\"workexp-design\"\r\n                      style={{ color: \"#000000\" }}\r\n                    >\r\n                      <div>\r\n                        <p>{work.role}</p>\r\n                        <small>{work.organization}</small>\r\n                      </div>\r\n                      <div>\r\n                        <p>\r\n                          <em>\r\n                            <small>\r\n                              {work.startdate} - {work.enddate}\r\n                            </small>\r\n                          </em>\r\n                        </p>\r\n                        <p\r\n                          style={{\r\n                            color: work.endorsed ? \"#25ff04\" : \"#fe0000\",\r\n                            // opacity: \"0.7\",\r\n                          }}\r\n                        >\r\n                          {work.endorsed ? \"Verified\" : \"Not Yet Verified\"}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              <div\r\n                className=\"readopenclose\"\r\n                onClick={() => this.setState({ readmore: false })}\r\n              >\r\n                <p>Hide</p>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              className=\"readopenclose\"\r\n              onClick={() => this.setState({ readmore: true })}\r\n            >\r\n              <p>...Read More</p>\r\n            </div>\r\n          )}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(EmployeeCard);\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport EmployeeCard from \"../../components/EmployeeCard\";\r\nimport \"./Admin.css\";\r\nimport Admin from \"../../abis/Admin.json\";\r\nimport LoadComp from \"../../components/LoadComp\";\r\n\r\nexport default class AllEmployees extends Component {\r\n  state = {\r\n    employees: [],\r\n    loadcomp: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({ loadcomp: true });\r\n    const web3 = window.web3;\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const employeeCount = await admin?.methods.employeeCount().call();\r\n\r\n      const employees = await Promise.all(\r\n        Array(parseInt(employeeCount))\r\n          .fill()\r\n          .map((ele, index) =>\r\n            admin.methods.getEmployeeContractByIndex(index).call()\r\n          )\r\n      );\r\n      this.setState({ employees });\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n    this.setState({ loadcomp: false });\r\n  };\r\n\r\n  render() {\r\n    return this.state.loadcomp ? (\r\n      <LoadComp />\r\n    ) : (\r\n      <div className=\"admin\">\r\n        <h2 className=\"card-heading\">All Registered Candidate</h2>\r\n        <br />\r\n        {this.state.employees?.map((employee, index) => (\r\n          <EmployeeCard key={index} employeeContractAddress={employee} />\r\n        ))}\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./OrgEndCard.css\";\r\nimport OrgEnd from \"../abis/OrganizationEndorser.json\";\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\nexport default class OrgEndCard extends Component {\r\n  state = {\r\n    orgEndInfo: {},\r\n    allEmployeesInOrg: [],\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const web3 = window.web3;\r\n    const OrgEndContract = await new web3.eth.Contract(\r\n      OrgEnd.abi,\r\n      this.props.OrgEndContractAddress\r\n    );\r\n\r\n    const orgEndData = await OrgEndContract.methods\r\n      .getOrganizationInfo()\r\n      .call();\r\n    const orgEndInfo = {\r\n      ethAddress: orgEndData[1],\r\n      name: orgEndData[0],\r\n      location: orgEndData[2],\r\n      description: orgEndData[3],\r\n    };\r\n\r\n    const employeeCount = await OrgEndContract.methods.totalEmployees().call();\r\n\r\n    const allEmployeesInOrg = await Promise.all(\r\n      Array(parseInt(employeeCount))\r\n        .fill()\r\n        .map((ele, index) =>\r\n          OrgEndContract.methods.getEmployeeByIndex(index).call()\r\n        )\r\n    );\r\n    this.setState({ orgEndInfo, allEmployeesInOrg });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"organization-card\">\r\n        <Card.Content>\r\n        <span style={{borderStyle:\"outset\",borderColor:\"black\"}}>{this.state.orgEndInfo?.name}</span>\r\n          <Card.Header>\r\n         \r\n            \r\n            <small>{this.state.orgEndInfo?.ethAddress}</small>\r\n          </Card.Header>\r\n          \r\n          <br></br>\r\n          <div>\r\n            <p>\r\n              <em>Location : </em>\r\n              <span style={{ color: \"black\" }}>\r\n                {this.state.orgEndInfo?.location}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <em>Description :</em>\r\n            <p style={{ color: \"black\" }}>\r\n              {this.state.orgEndInfo?.description}\r\n            </p>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <p>\r\n              <em>candidate Count: </em>\r\n              <span style={{ color: \"black\" }}>\r\n                {this.state.allEmployeesInOrg?.length}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport Admin from \"../../abis/Admin.json\";\r\nimport LoadComp from \"../../components/LoadComp\";\r\nimport OrgEndCard from \"../../components/OrgEndCard\";\r\n\r\nexport default class AllOrganizationEndorser extends Component {\r\n  state = {\r\n    orgends: [],\r\n    loadcomp: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({ loadcomp: true });\r\n    const web3 = window.web3;\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const orgendCount = await admin?.methods\r\n        .OrganizationEndorserCount()\r\n        .call();\r\n      const orgends = await Promise.all(\r\n        Array(parseInt(orgendCount))\r\n          .fill()\r\n          .map((ele, index) =>\r\n            admin.methods.getOrganizationContractByIndex(index).call()\r\n          )\r\n      );\r\n      this.setState({ orgends });\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n    this.setState({ loadcomp: false });\r\n  };\r\n\r\n  render() {\r\n    return this.state.loadcomp ? (\r\n      <LoadComp />\r\n    ) : (\r\n      <div className=\"admin\">\r\n        <h2 className=\"card-heading\">Registered Organization</h2>\r\n        <br />\r\n        {this.state.orgends?.map((orgend, index) => (\r\n          <OrgEndCard key={index} OrgEndContractAddress={orgend} />\r\n        ))}\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nexport default class LineChart extends Component {\r\n  state = {\r\n    data: {},\r\n    options: {},\r\n    newdata: {},\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    setTimeout(() => {\r\n      var data = {\r\n        labels: [...Array(this.props.overallEndorsement?.length).keys()],\r\n        datasets: [\r\n          {\r\n            label: \"Endorse Rating Spread\",\r\n            data: this.props.overallEndorsement,\r\n            fill: false,\r\n            backgroundColor: \"white\",\r\n            borderColor: \"rgba(255,255,255,0.3)\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      var options = {\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                beginAtZero: true,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      };\r\n      this.setState({\r\n        data,\r\n        options,\r\n      });\r\n    }, 1000);\r\n  };\r\n  render() {\r\n    return <Line data={this.state.data} options={this.state.options} />;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, CardContent } from \"semantic-ui-react\";\r\nimport Employee from \"../abis/Employee.json\";\r\nimport Admin from \"../abis/Admin.json\";\r\nimport { buildStyles, CircularProgressbar } from \"react-circular-progressbar\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./SkillCard.css\";\r\n\r\nexport default class SkillCard extends Component {\r\n  state = {\r\n    colour: [\"#b6e498\", \"#61dafb\", \"#764abc\", \"#83cd29\", \"#00d1b2\"],\r\n  };\r\n\r\n  removeSkill = async (name) => {\r\n    const web3 = window.web3;\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    const accounts = await web3.eth.getAccounts();\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const employeeContractAddress = await admin?.methods\r\n        ?.getEmployeeContractByAddress(accounts[0])\r\n        .call();\r\n      const EmployeeContract = await new web3.eth.Contract(\r\n        Employee.abi,\r\n        employeeContractAddress\r\n      );\r\n      await EmployeeContract?.methods\r\n        ?.deleteSkill(name)\r\n        .send({ from: accounts[0] });\r\n      toast.success(\"Skill deleted successfully!!\");\r\n      window.location.reload(false);\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const skill = this.props.skill;\r\n    return (\r\n      <Card className=\"skill-des\">\r\n        {this.props.update && (\r\n          <span\r\n            className=\"delete-button-skill\"\r\n            onClick={(e) => this.removeSkill(skill.name)}\r\n          >\r\n            {!skill.visible ? (\r\n              <i class=\"fas fa-eye-slash\"></i>\r\n            ) : (\r\n              <i class=\"fas fa-eye\"></i>\r\n            )}\r\n          </span>\r\n        )}\r\n        <CardContent>\r\n          <div className=\"skillcard_container\">\r\n            <div>\r\n              <Card.Header style={{ fontSize: \"18px\", fontWeight: \"600\" }}>\r\n                {skill.name}\r\n                <br />\r\n                <small style={{ color: \"#c5c6c7\" }}>{skill.experience}</small>\r\n              </Card.Header>\r\n\r\n              <br />\r\n              {skill.endorsed ? (\r\n                <div>\r\n                  <div>\r\n                    <em>Endorsed By:</em>\r\n                    <p>\r\n                      <small\r\n                        style={{ wordBreak: \"break-word\", color: \"#c5c6c7\" }}\r\n                      >\r\n                        {skill.endorser_address}\r\n                      </small>\r\n                    </p>\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                    <em>Review: </em>\r\n                    <p>\r\n                      <small style={{ color: \"#c5c6c7\" }}>{skill.review}</small>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <p style={{ color: \"yellow\" }}>Not Yet Endorsed</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <div style={{ width: \"100px\" }}>\r\n                <CircularProgressbar\r\n                  value={skill.overall_percentage}\r\n                  text={`Acquired - ${skill.overall_percentage}%`}\r\n                  strokeWidth=\"5\"\r\n                  styles={buildStyles({\r\n                    strokeLinecap: \"round\",\r\n                    textSize: \"12px\",\r\n                    pathTransitionDuration: 1,\r\n                    pathColor: `${\r\n                      this.state.colour[Math.floor(Math.random() * 5)]\r\n                    }`,\r\n                    textColor: \"#c5c6c7\",\r\n                    trailColor: \"#393b3fa6\",\r\n                    backgroundColor: \"#c5c6c7\",\r\n                  })}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nfunction CodeforcesGraph() {\r\n  const [data, setdata] = useState({});\r\n  const [mxRating, setmxRating] = useState(0);\r\n\r\n  const options = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    elements: {\r\n      points: {\r\n        radius: 0,\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchdata = async () => {\r\n      fetch(\"https://codeforces.com/api/user.rating?handle=Paladin09\")\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.status === \"OK\" && res.result.length > 1) {\r\n            var newarr = [];\r\n            var mx = 0;\r\n            res.result.forEach((data) => {\r\n              newarr.push(data.newRating);\r\n              if (data.newRating && data.newRating >= mx) {\r\n                mx = data.newRating;\r\n              }\r\n            });\r\n            setmxRating(mx);\r\n            var newlabels = [...Array(res.result.length).keys()];\r\n            setdata({\r\n              labels: newlabels,\r\n              datasets: [\r\n                {\r\n                  label: \"Ratings\",\r\n                  data: newarr,\r\n                  backgroundColor: \"white\",\r\n                  borderColor: \"rgba(255,255,255,0.3)\",\r\n                  fill: false,\r\n                },\r\n              ],\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n    fetchdata();\r\n    return () => {\r\n      //\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <p style={{ color: \"#c5c6c7\" }}>\r\n        Codeforces Ratings:{\" \"}\r\n        <p style={{ color: \"white\", display: \"inline\" }}>{mxRating}</p>{\" \"}\r\n        <i>\r\n          <small>(max-rating)</small>\r\n        </i>\r\n      </p>\r\n      <div>\r\n        <Line data={data} options={options} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CodeforcesGraph;\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Card, Grid } from \"semantic-ui-react\";\r\nimport Admin from \"../../abis/Admin.json\";\r\nimport Employee from \"../../abis/Employee.json\";\r\nimport LineChart from \"../../components/LineChart\";\r\nimport SkillCard from \"../../components/SkillCard\";\r\nimport \"./Employee.css\";\r\nimport { buildStyles, CircularProgressbar } from \"react-circular-progressbar\";\r\nimport CodeforcesGraph from \"../../components/CodeforcesGraph\";\r\nimport LoadComp from \"../../components/LoadComp\";\r\n\r\nexport default class EmployeePage extends Component {\r\n  state = {\r\n    employeedata: {},\r\n    overallEndorsement: [],\r\n    skills: [],\r\n    certifications: [],\r\n    workExps: [],\r\n    educations: [],\r\n    colour: [\"#b6e498\", \"#61dafb\", \"#764abc\", \"#83cd29\", \"#00d1b2\"],\r\n    readmore: false,\r\n    codeforces_res: [],\r\n    loadcomp: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({ loadcomp: true });\r\n    const web3 = window.web3;\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    const accounts = await web3.eth.getAccounts();\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const employeeContractAddress = await admin?.methods\r\n        ?.getEmployeeContractByAddress(accounts[0])\r\n        .call();\r\n      const EmployeeContract = await new web3.eth.Contract(\r\n        Employee.abi,\r\n        employeeContractAddress\r\n      );\r\n      this.getSkills(EmployeeContract);\r\n      this.getCertifications(EmployeeContract);\r\n      this.getWorkExp(EmployeeContract);\r\n      this.getEducation(EmployeeContract);\r\n      const employeedata = await EmployeeContract.methods\r\n        .getEmployeeInfo()\r\n        .call();\r\n      const newEmployedata = {\r\n        ethAddress: employeedata[0],\r\n        name: employeedata[1],\r\n        location: employeedata[2],\r\n        description: employeedata[3],\r\n        overallEndorsement: employeedata[4],\r\n        endorsecount: employeedata[5],\r\n      };\r\n      const endorseCount = newEmployedata.endorsecount;\r\n      const overallEndorsement = await Promise.all(\r\n        Array(parseInt(endorseCount))\r\n          .fill()\r\n          .map((ele, index) =>\r\n            EmployeeContract?.methods?.overallEndorsement(index).call()\r\n          )\r\n      );\r\n\r\n      this.setState({ employeedata: newEmployedata, overallEndorsement });\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n    this.setState({ loadcomp: false });\r\n  };\r\n\r\n  getSkills = async (EmployeeContract) => {\r\n    const skillCount = await EmployeeContract?.methods?.getSkillCount().call();\r\n    const skills = await Promise.all(\r\n      Array(parseInt(skillCount))\r\n        .fill()\r\n        .map((ele, index) =>\r\n          EmployeeContract?.methods?.getSkillByIndex(index).call()\r\n        )\r\n    );\r\n\r\n    var newskills = [];\r\n    skills.forEach((certi) => {\r\n      newskills.push({\r\n        name: certi[0],\r\n        overall_percentage: certi[1],\r\n        experience: certi[2],\r\n        endorsed: certi[3],\r\n        endorser_address: certi[4],\r\n        review: certi[5],\r\n        visible: certi[6],\r\n      });\r\n      return;\r\n    });\r\n\r\n    this.setState({ skills: newskills });\r\n  };\r\n\r\n  getCertifications = async (EmployeeContract) => {\r\n    const certiCount = await EmployeeContract?.methods\r\n      ?.getCertificationCount()\r\n      .call();\r\n    const certifications = await Promise.all(\r\n      Array(parseInt(certiCount))\r\n        .fill()\r\n        .map((ele, index) =>\r\n          EmployeeContract?.methods?.getCertificationByIndex(index).call()\r\n        )\r\n    );\r\n    var newcertifications = [];\r\n    certifications.forEach((certi) => {\r\n      newcertifications.push({\r\n        name: certi[0],\r\n        organization: certi[1],\r\n        score: certi[2],\r\n        endorsed: certi[3],\r\n        visible: certi[4],\r\n      });\r\n      return;\r\n    });\r\n    this.setState({ certifications: newcertifications });\r\n  };\r\n\r\n  getWorkExp = async (EmployeeContract) => {\r\n    const workExpCount = await EmployeeContract?.methods\r\n      ?.getWorkExpCount()\r\n      .call();\r\n    const workExps = await Promise.all(\r\n      Array(parseInt(workExpCount))\r\n        .fill()\r\n        .map((ele, index) =>\r\n          EmployeeContract?.methods?.getWorkExpByIndex(index).call()\r\n        )\r\n    );\r\n\r\n    var newworkExps = [];\r\n    workExps.forEach((work) => {\r\n      newworkExps.push({\r\n        role: work[0],\r\n        organization: work[1],\r\n        startdate: work[2],\r\n        enddate: work[3],\r\n        endorsed: work[4],\r\n        description: work[5],\r\n        visible: work[6],\r\n      });\r\n      return;\r\n    });\r\n\r\n    this.setState({ workExps: newworkExps });\r\n  };\r\n\r\n  getEducation = async (EmployeeContract) => {\r\n    const educationCount = await EmployeeContract?.methods\r\n      ?.getEducationCount()\r\n      .call();\r\n    const educations = await Promise.all(\r\n      Array(parseInt(educationCount))\r\n        .fill()\r\n        .map((ele, index) =>\r\n          EmployeeContract?.methods?.getEducationByIndex(index).call()\r\n        )\r\n    );\r\n    var neweducation = [];\r\n    educations.forEach((certi) => {\r\n      neweducation.push({\r\n        institute: certi[0],\r\n        startdate: certi[1],\r\n        enddate: certi[2],\r\n        endorsed: certi[3],\r\n        description: certi[4],\r\n      });\r\n      return;\r\n    });\r\n    this.setState({ educations: neweducation });\r\n  };\r\n\r\n  render() {\r\n    return this.state.loadcomp ? (\r\n      <LoadComp />\r\n    ) : (\r\n      <div>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={6}>\r\n              <Card className=\"personal-info\">\r\n                <Card.Content>\r\n                  <Card.Header>\r\n                    {this.state.employeedata?.name}\r\n                    <small\r\n                      style={{ wordBreak: \"break-word\", color: \"#c5c6c7\" }}\r\n                    >\r\n                      {this.state.employeedata?.ethAddress}\r\n                    </small>\r\n                  </Card.Header>\r\n                  <br />\r\n                  <div>\r\n                    <p>\r\n                      <em>Location: </em>\r\n                      <span style={{ color: \"#c5c6c7\" }}>\r\n                        {this.state.employeedata?.location}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                    <p>\r\n                      <em>Overall Endorsement Rating:</em>\r\n                    </p>\r\n                    <LineChart\r\n                      overallEndorsement={this.state.overallEndorsement}\r\n                    />\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n              <Card className=\"employee-des\">\r\n                <Card.Content>\r\n                  <Card.Header>About:</Card.Header>\r\n                  <div>\r\n                    <p style={{ color: \"#c5c6c7\" }}>\r\n                      {this.state.employeedata?.description}\r\n                    </p>\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                    <Card.Header\r\n                      style={{ fontSize: \"19px\", fontWeight: \"600\" }}\r\n                    >\r\n                      Education:\r\n                    </Card.Header>\r\n                    <br />\r\n                    <div className=\"education\">\r\n                      {this.state.educations?.map((education, index) => (\r\n                        <div className=\"education-design\" key={index}>\r\n                          <div\r\n                            style={{ paddingRight: \"50px\", color: \"#c5c6c7\" }}\r\n                          >\r\n                            <p>{education.description}</p>\r\n                            <small\r\n                              style={{\r\n                                wordBreak: \"break-word\",\r\n                                fontSize: \"10px\",\r\n                              }}\r\n                            >\r\n                              {education.institute}\r\n                            </small>\r\n                          </div>\r\n                          <div>\r\n                            <small style={{ color: \"#c5c6c7\" }}>\r\n                              <em>\r\n                                {education.startdate} - {education.enddate}\r\n                              </em>\r\n                            </small>\r\n                            <p\r\n                              style={{\r\n                                color: education.endorsed\r\n                                  ? \"#00d1b2\"\r\n                                  : \"yellow\",\r\n                                opacity: \"0.7\",\r\n                              }}\r\n                            >\r\n                              {education.endorsed\r\n                                ? \"Endorsed\"\r\n                                : \"Not Yet Endorsed\"}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n              \r\n            </Grid.Column>\r\n            <Grid.Column width={10}>\r\n            <Card className=\"employee-des\">\r\n                <Card.Content>\r\n                  <Card.Header>Competetive Platform Ratings</Card.Header>\r\n                  <CodeforcesGraph />\r\n                </Card.Content>\r\n              </Card>\r\n            \r\n              <Card className=\"employee-des\">\r\n                <Card.Content>\r\n                  <Card.Header>Certifications</Card.Header>\r\n                  <br />\r\n                  <div>\r\n                    {this.state.certifications?.map(\r\n                      (certi, index) =>\r\n                        certi.visible && (\r\n                          <div key={index} className=\"certification-container\">\r\n                            <div style={{ color: \"#c5c6c7\" }}>\r\n                              <p>{certi.name}</p>\r\n                              <small style={{ wordBreak: \"break-word\" }}>\r\n                                {certi.organization}\r\n                              </small>\r\n                              <p\r\n                                style={{\r\n                                  color: certi.endorsed ? \"#00d1b2\" : \"yellow\",\r\n                                  opacity: \"0.7\",\r\n                                }}\r\n                              >\r\n                                {certi.endorsed\r\n                                  ? \"Endorsed\"\r\n                                  : \"Not Yet Endorsed\"}\r\n                              </p>\r\n                            </div>\r\n                            <div>\r\n                              <div style={{ width: \"100px\" }}>\r\n                                <CircularProgressbar\r\n                                  value={certi.score}\r\n                                  text={`Score - ${certi.score}%`}\r\n                                  strokeWidth=\"5\"\r\n                                  styles={buildStyles({\r\n                                    strokeLinecap: \"round\",\r\n                                    textSize: \"12px\",\r\n                                    pathTransitionDuration: 1,\r\n                                    pathColor: `rgba(255,255,255, ${\r\n                                      certi.score / 100\r\n                                    })`,\r\n                                    textColor: \"#c5c6c7\",\r\n                                    trailColor: \"#393b3fa6\",\r\n                                    backgroundColor: \"#c5c6c7\",\r\n                                  })}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                    )}\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n              <Card className=\"employee-des\">\r\n                <Card.Content>\r\n                  <Card.Header>Work Experiences</Card.Header>\r\n                  <br />\r\n                  <div className=\"education\">\r\n                    {this.state.workExps?.map(\r\n                      (workExp, index) =>\r\n                        workExp.visible && (\r\n                          <div className=\"education-design\" key={index}>\r\n                            <div style={{ color: \"#c5c6c7\" }}>\r\n                              <p>{workExp.role}</p>\r\n                              <small style={{ wordBreak: \"break-word\" }}>\r\n                                {workExp.organization}\r\n                              </small>\r\n                            </div>\r\n                            <div>\r\n                              <small>\r\n                                <em>\r\n                                  {workExp.startdate} - {workExp.enddate}\r\n                                </em>\r\n                              </small>\r\n                              <p\r\n                                style={{\r\n                                  color: workExp.endorsed\r\n                                    ? \"#00d1b2\"\r\n                                    : \"yellow\",\r\n                                  opacity: \"0.7\",\r\n                                }}\r\n                              >\r\n                                {workExp.endorsed\r\n                                  ? \"Endorsed\"\r\n                                  : \"Not Yet Endorsed\"}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                    )}\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n              <Card className=\"employee-des\">\r\n                <Card.Content>\r\n                  <Card.Header>Skills</Card.Header>\r\n                  <br />\r\n                  <div className=\"skill-height-container\">\r\n                    {this.state.skills?.map((skill, index) =>\r\n                      skill.visible ? (\r\n                        <div>\r\n                          <SkillCard skill={skill} key={index} />\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )\r\n                    )}\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n              \r\n            </Grid.Column>\r\n            \r\n\r\n          </Grid.Row>\r\n          \r\n          \r\n        \r\n\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Form, Header, Input, Modal } from \"semantic-ui-react\";\r\nimport Admin from \"../abis/Admin.json\";\r\nimport Employee from \"../abis/Employee.json\";\r\nimport \"./Modals.css\";\r\nimport ScanQR from \"./ScanQR\";\r\n\r\nexport default class GetCertificationModal extends Component {\r\n  state = {\r\n    name: \"\",\r\n    organization: \"\",\r\n    score: \"\",\r\n    loading: false,\r\n    scanQR: false,\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    const { name, organization, score } = this.state;\r\n    if (!name || !organization || !(score >= 1 && score <= 100)) {\r\n      toast.error(\"Please enter all the fields.\");\r\n      return;\r\n    }\r\n    this.setState({ loading: true });\r\n    e.preventDefault();\r\n    const web3 = window.web3;\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    const accounts = await web3.eth.getAccounts();\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const employeeContractAddress = await admin?.methods\r\n        ?.getEmployeeContractByAddress(accounts[0])\r\n        .call();\r\n      const EmployeeContract = await new web3.eth.Contract(\r\n        Employee.abi,\r\n        employeeContractAddress\r\n      );\r\n      try {\r\n        await EmployeeContract.methods\r\n          .addCertification(name, organization, score)\r\n          .send({\r\n            from: accounts[0],\r\n          });\r\n        toast.success(\"Certification saved successfullyy!!\");\r\n      } catch (err) {\r\n        toast.error(err.message);\r\n      }\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n    this.setState({ loading: false });\r\n    this.props.closeCertificationModal();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  closeScanQRModal = () => {\r\n    this.setState({ scanQR: false });\r\n  };\r\n\r\n  handleAddAddress = (res) => {\r\n    this.setState({ organization: res });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ScanQR\r\n          isOpen={this.state.scanQR}\r\n          closeScanQRModal={this.closeScanQRModal}\r\n          handleAddAddress={this.handleAddAddress}\r\n        />\r\n        <Modal\r\n          as={Form}\r\n          onSubmit={(e) => this.handleSubmit(e)}\r\n          open={this.props.isOpen}\r\n          size=\"tiny\"\r\n          className=\"modal-des\"\r\n        >\r\n          <Header\r\n            className=\"modal-heading\"\r\n            icon=\"pencil\"\r\n            content=\"Enter Certification Details\"\r\n            as=\"h2\"\r\n          />\r\n          <Modal.Content className=\"modal-content\">\r\n            <Form className=\"form-inputs\">\r\n              <Form.Field className=\"form-inputs\">\r\n                <input\r\n                  id=\"name\"\r\n                  placeholder=\"Name\"\r\n                  autoComplete=\"off\"\r\n                  autoCorrect=\"off\"\r\n                  value={this.state.name}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field className=\"form-inputs\">\r\n                <Input action>\r\n                  <input\r\n                    id=\"organization\"\r\n                    placeholder=\"0x0\"\r\n                    autoComplete=\"off\"\r\n                    autoCorrect=\"off\"\r\n                    value={this.state.organization}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Button\r\n                    type=\"button\"\r\n                    content=\"QR\"\r\n                    icon=\"qrcode\"\r\n                    onClick={() => this.setState({ scanQR: true })}\r\n                  />\r\n                </Input>\r\n              </Form.Field>\r\n              <Form.Field className=\"form-inputs\">\r\n                <input\r\n                  id=\"score\"\r\n                  placeholder=\"Score\"\r\n                  autoComplete=\"off\"\r\n                  autoCorrect=\"off\"\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  max=\"100\"\r\n                  value={this.state.score}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions className=\"modal-actions\">\r\n            <Button\r\n              className=\"close-button\"\r\n              type=\"button\"\r\n              color=\"red\"\r\n              icon=\"times\"\r\n              content=\"Close\"\r\n              onClick={() => this.props.closeCertificationModal()}\r\n            />\r\n            <Button\r\n              className=\"button-css\"\r\n              type=\"submit\"\r\n              color=\"green\"\r\n              icon=\"save\"\r\n              content=\"Save\"\r\n              loading={this.state.loading}\r\n            />\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Form, Header, Input, Modal } from \"semantic-ui-react\";\r\nimport Admin from \"../abis/Admin.json\";\r\nimport Employee from \"../abis/Employee.json\";\r\nimport \"./Modals.css\";\r\nimport ScanQR from \"./ScanQR\";\r\n\r\nexport default class GetWorkExpModal extends Component {\r\n  state = {\r\n    role: \"\",\r\n    organization: \"\",\r\n    startdate: \"\",\r\n    enddate: \"\",\r\n    description: \"\",\r\n    loading: false,\r\n    scanQR: false,\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    const { role, organization, startdate, enddate, description } = this.state;\r\n    if (!role | !organization || !startdate || !enddate || !description) {\r\n      toast.error(\"Please enter all the fields.\");\r\n      return;\r\n    }\r\n    this.setState({ loading: true });\r\n    e.preventDefault();\r\n    const web3 = window.web3;\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    const accounts = await web3.eth.getAccounts();\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const employeeContractAddress = await admin?.methods\r\n        ?.getEmployeeContractByAddress(accounts[0])\r\n        .call();\r\n      const EmployeeContract = await new web3.eth.Contract(\r\n        Employee.abi,\r\n        employeeContractAddress\r\n      );\r\n      try {\r\n        await EmployeeContract.methods\r\n          .addWorkExp(role, organization, startdate, enddate, description)\r\n          .send({\r\n            from: accounts[0],\r\n          });\r\n        toast.success(\"Certification saved successfullyy!!\");\r\n      } catch (err) {\r\n        toast.error(err.message);\r\n      }\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n    this.setState({ loading: false });\r\n    this.props.closeCertificationModal();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  closeScanQRModal = () => {\r\n    this.setState({ scanQR: false });\r\n  };\r\n\r\n  handleAddAddress = (res) => {\r\n    this.setState({ organization: res });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ScanQR\r\n          isOpen={this.state.scanQR}\r\n          closeScanQRModal={this.closeScanQRModal}\r\n          handleAddAddress={this.handleAddAddress}\r\n        />\r\n        <Modal\r\n          as={Form}\r\n          onSubmit={(e) => this.handleSubmit(e)}\r\n          open={this.props.isOpen}\r\n          size=\"tiny\"\r\n          className=\"modal-des\"\r\n        >\r\n          <Header\r\n            className=\"modal-heading\"\r\n            icon=\"pencil\"\r\n            content=\"Enter Work Experience Details\"\r\n            as=\"h2\"\r\n          />\r\n          <Modal.Content className=\"modal-content\">\r\n            <Form className=\"form-inputs\">\r\n              <Form.Field className=\"form-inputs\">\r\n                <input\r\n                  id=\"role\"\r\n                  placeholder=\"Job Title\"\r\n                  autoComplete=\"off\"\r\n                  autoCorrect=\"off\"\r\n                  value={this.state.role}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field className=\"form-inputs\">\r\n                <Input action>\r\n                  <input\r\n                    id=\"organization\"\r\n                    placeholder=\"Organization\"\r\n                    autoComplete=\"off\"\r\n                    autoCorrect=\"off\"\r\n                    value={this.state.organization}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Button\r\n                    type=\"button\"\r\n                    content=\"QR\"\r\n                    icon=\"qrcode\"\r\n                    onClick={() => this.setState({ scanQR: true })}\r\n                  />\r\n                </Input>\r\n              </Form.Field>\r\n              <Form.Field className=\"form-inputs\">\r\n                <input\r\n                  id=\"startdate\"\r\n                  placeholder=\"Start Date\"\r\n                  autoComplete=\"off\"\r\n                  autoCorrect=\"off\"\r\n                  value={this.state.startdate}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field className=\"form-inputs\">\r\n                <input\r\n                  id=\"enddate\"\r\n                  placeholder=\"End Date\"\r\n                  autoComplete=\"off\"\r\n                  autoCorrect=\"off\"\r\n                  value={this.state.enddate}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field className=\"form-inputs\">\r\n                <input\r\n                  id=\"description\"\r\n                  placeholder=\"Description\"\r\n                  autoComplete=\"off\"\r\n                  autoCorrect=\"off\"\r\n                  value={this.state.description}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions className=\"modal-actions\">\r\n            <Button\r\n              className=\"close-button\"\r\n              type=\"button\"\r\n              color=\"red\"\r\n              icon=\"times\"\r\n              content=\"Close\"\r\n              onClick={() => this.props.closeCertificationModal()}\r\n            />\r\n            <Button\r\n              className=\"button-css\"\r\n              type=\"submit\"\r\n              color=\"green\"\r\n              icon=\"save\"\r\n              content=\"Save\"\r\n              loading={this.state.loading}\r\n            />\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Form, Header, Modal } from \"semantic-ui-react\";\r\nimport Admin from \"../abis/Admin.json\";\r\nimport Employee from \"../abis/Employee.json\";\r\nimport \"./Modals.css\";\r\n\r\nexport default class GetSkillsModal extends Component {\r\n  state = {\r\n    name: \"\",\r\n    experience: \"\",\r\n    loading: false,\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    this.setState({ loading: true });\r\n    const { name, experience } = this.state;\r\n    if (!name || !experience) {\r\n      toast.error(\"Please enter all the fields.\");\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    const web3 = window.web3;\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    const accounts = await web3.eth.getAccounts();\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const employeeContractAddress = await admin?.methods\r\n        ?.getEmployeeContractByAddress(accounts[0])\r\n        .call();\r\n      const EmployeeContract = await new web3.eth.Contract(\r\n        Employee.abi,\r\n        employeeContractAddress\r\n      );\r\n      try {\r\n        await EmployeeContract.methods.addSkill(name, experience).send({\r\n          from: accounts[0],\r\n        });\r\n        toast.success(\"Skill saved successfully!!\");\r\n      } catch (err) {\r\n        toast.error(err.message);\r\n      }\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n    this.setState({ loading: false });\r\n    this.props.closeCertificationModal();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        as={Form}\r\n        onSubmit={(e) => this.handleSubmit(e)}\r\n        open={this.props.isOpen}\r\n        size=\"tiny\"\r\n        className=\"modal-des\"\r\n      >\r\n        <Header\r\n          className=\"modal-heading\"\r\n          icon=\"pencil\"\r\n          content=\"Enter Skill Details\"\r\n          as=\"h2\"\r\n        />\r\n        <Modal.Content className=\"modal-content\">\r\n          <Form className=\"form-inputs\">\r\n            <Form.Field className=\"form-inputs\">\r\n              <input\r\n                id=\"name\"\r\n                placeholder=\"Skill Name\"\r\n                autoComplete=\"off\"\r\n                autoCorrect=\"off\"\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field className=\"form-inputs\">\r\n              <input\r\n                id=\"experience\"\r\n                placeholder=\"Experience\"\r\n                autoComplete=\"off\"\r\n                autoCorrect=\"off\"\r\n                value={this.state.experience}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions className=\"modal-actions\">\r\n          <Button\r\n            className=\"close-button\"\r\n            type=\"button\"\r\n            color=\"red\"\r\n            icon=\"times\"\r\n            content=\"Close\"\r\n            onClick={() => this.props.closeCertificationModal()}\r\n          />\r\n          <Button\r\n            className=\"button-css\"\r\n            type=\"submit\"\r\n            color=\"green\"\r\n            icon=\"save\"\r\n            content=\"Save\"\r\n            loading={this.state.loading}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Form, Header, Input, Modal } from \"semantic-ui-react\";\r\nimport Admin from \"../abis/Admin.json\";\r\nimport Employee from \"../abis/Employee.json\";\r\nimport \"./Modals.css\";\r\nimport ScanQR from \"./ScanQR\";\r\n\r\nexport default class GetEducationModal extends Component {\r\n  state = {\r\n    institute: \"\",\r\n    startdate: \"\",\r\n    enddate: \"\",\r\n    description: \"\",\r\n    loading: false,\r\n    scanQR: false,\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    const { institute, startdate, enddate, description } = this.state;\r\n    if (!institute || !startdate || !enddate || !description) {\r\n      toast.error(\"Please enter all the fields.\");\r\n      return;\r\n    }\r\n    this.setState({ loading: true });\r\n    e.preventDefault();\r\n    const web3 = window.web3;\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    const accounts = await web3.eth.getAccounts();\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const employeeContractAddress = await admin?.methods\r\n        ?.getEmployeeContractByAddress(accounts[0])\r\n        .call();\r\n      const EmployeeContract = await new web3.eth.Contract(\r\n        Employee.abi,\r\n        employeeContractAddress\r\n      );\r\n      try {\r\n        await EmployeeContract.methods\r\n          .addEducation(institute, startdate, enddate, description)\r\n          .send({\r\n            from: accounts[0],\r\n          });\r\n        toast.success(\"Education saved successfullyy!!\");\r\n      } catch (err) {\r\n        toast.error(err.message);\r\n      }\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n    this.setState({ loading: false });\r\n    this.props.closeCertificationModal();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  closeScanQRModal = () => {\r\n    this.setState({ scanQR: false });\r\n  };\r\n\r\n  handleAddAddress = (res) => {\r\n    this.setState({ institute: res });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ScanQR\r\n          isOpen={this.state.scanQR}\r\n          closeScanQRModal={this.closeScanQRModal}\r\n          handleAddAddress={this.handleAddAddress}\r\n        />\r\n        <Modal\r\n          as={Form}\r\n          onSubmit={(e) => this.handleSubmit(e)}\r\n          open={this.props.isOpen}\r\n          size=\"tiny\"\r\n          className=\"modal-des\"\r\n        >\r\n          <Header\r\n            className=\"modal-heading\"\r\n            icon=\"pencil\"\r\n            content=\"Enter Education Details\"\r\n            as=\"h2\"\r\n          />\r\n          <Modal.Content className=\"modal-content\">\r\n            <Form className=\"form-inputs\">\r\n              <Form.Field className=\"form-inputs\">\r\n                <Input action>\r\n                  <input\r\n                    id=\"institute\"\r\n                    placeholder=\"Institute Address\"\r\n                    autoComplete=\"off\"\r\n                    autoCorrect=\"off\"\r\n                    value={this.state.institute}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Button\r\n                    type=\"button\"\r\n                    content=\"QR\"\r\n                    icon=\"qrcode\"\r\n                    onClick={() => this.setState({ scanQR: true })}\r\n                  />\r\n                </Input>\r\n              </Form.Field>\r\n              <Form.Field className=\"form-inputs\">\r\n                <input\r\n                  id=\"startdate\"\r\n                  placeholder=\"Start Date\"\r\n                  autoComplete=\"off\"\r\n                  autoCorrect=\"off\"\r\n                  value={this.state.startdate}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field className=\"form-inputs\">\r\n                <input\r\n                  id=\"enddate\"\r\n                  placeholder=\"End Date\"\r\n                  autoComplete=\"off\"\r\n                  autoCorrect=\"off\"\r\n                  value={this.state.enddate}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field className=\"form-inputs\">\r\n                <input\r\n                  id=\"description\"\r\n                  placeholder=\"Degree & Major\"\r\n                  autoComplete=\"off\"\r\n                  autoCorrect=\"off\"\r\n                  value={this.state.description}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions className=\"modal-actions\">\r\n            <Button\r\n              className=\"close-button\"\r\n              type=\"button\"\r\n              color=\"red\"\r\n              icon=\"times\"\r\n              content=\"Close\"\r\n              onClick={() => this.props.closeCertificationModal()}\r\n            />\r\n            <Button\r\n              className=\"button-css\"\r\n              type=\"submit\"\r\n              color=\"green\"\r\n              icon=\"save\"\r\n              content=\"Save\"\r\n              loading={this.state.loading}\r\n            />\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Form, Header, Modal } from \"semantic-ui-react\";\r\nimport Admin from \"../abis/Admin.json\";\r\nimport Employee from \"../abis/Employee.json\";\r\nimport \"./Modals.css\";\r\n\r\nexport default class GetEditFieldModal extends Component {\r\n  state = {\r\n    name1: \"\",\r\n    description1: \"\",\r\n    location1: \"\",\r\n    loading: false,\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    var name = this.state.name1;\r\n    var description = this.state.description1;\r\n    var location = this.state.location1;\r\n    if (!name) name = this.props.name;\r\n    if (!location) location = this.props.location;\r\n    if (!description) description = this.props.description;\r\n    if (!name || !description || !location) {\r\n      toast.error(\"Please enter all the fields.\");\r\n      return;\r\n    }\r\n    this.setState({ loading: true });\r\n    e.preventDefault();\r\n    const web3 = window.web3;\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    const accounts = await web3.eth.getAccounts();\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const employeeContractAddress = await admin?.methods\r\n        ?.getEmployeeContractByAddress(accounts[0])\r\n        .call();\r\n      const EmployeeContract = await new web3.eth.Contract(\r\n        Employee.abi,\r\n        employeeContractAddress\r\n      );\r\n      try {\r\n        await EmployeeContract.methods\r\n          .editInfo(name, location, description)\r\n          .send({\r\n            from: accounts[0],\r\n          });\r\n        toast.success(\"Employee Info Updated\");\r\n      } catch (err) {\r\n        toast.error(err.message);\r\n      }\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n    this.setState({ loading: false });\r\n    this.props.closeEditFieldModal();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        as={Form}\r\n        onSubmit={(e) => this.handleSubmit(e)}\r\n        open={this.props.isOpen}\r\n        size=\"tiny\"\r\n        className=\"modal-des\"\r\n      >\r\n        <Header\r\n          className=\"modal-heading\"\r\n          icon=\"pencil\"\r\n          content=\"Update Fields\"\r\n          as=\"h2\"\r\n        />\r\n        <Modal.Content className=\"modal-content\">\r\n          <Form className=\"form-inputs\">\r\n            {!this.props.isDescription && (\r\n              <>\r\n                {\" \"}\r\n                <Form.Field className=\"form-inputs\">\r\n                  <input\r\n                    id=\"name1\"\r\n                    placeholder=\"Name\"\r\n                    autoComplete=\"off\"\r\n                    autoCorrect=\"off\"\r\n                    value={this.state.name1}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field className=\"form-inputs\">\r\n                  <input\r\n                    id=\"location1\"\r\n                    placeholder=\"Location\"\r\n                    autoComplete=\"off\"\r\n                    autoCorrect=\"off\"\r\n                    value={this.state.location1}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Field>{\" \"}\r\n              </>\r\n            )}\r\n            {this.props.isDescription && (\r\n              <Form.Field className=\"form-inputs\">\r\n                <textarea\r\n                  id=\"description1\"\r\n                  placeholder=\"About\"\r\n                  autoComplete=\"off\"\r\n                  autoCorrect=\"off\"\r\n                  value={this.state.description1}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n            )}\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions className=\"modal-actions\">\r\n          <Button\r\n            className=\"close-button\"\r\n            type=\"button\"\r\n            color=\"red\"\r\n            icon=\"times\"\r\n            content=\"Close\"\r\n            onClick={() => this.props.closeEditFieldModal()}\r\n          />\r\n          <Button\r\n            className=\"button-css\"\r\n            type=\"submit\"\r\n            color=\"green\"\r\n            icon=\"save\"\r\n            content=\"Save\"\r\n            loading={this.state.loading}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyA3pOj1Ex5Y95upo3WYO-LtlO9O3-H-usc\",\r\n//   authDomain: \"skillset-verified.firebaseapp.com\",\r\n//   projectId: \"skillset-verified\",\r\n//   storageBucket: \"skillset-verified.appspot.com\",\r\n//   messagingSenderId: \"75144383574\",\r\n//   appId: \"1:75144383574:web:75af1487584a97169b7ff7\",\r\n//   measurementId: \"G-REQXD214NH\",\r\n// };\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBMvBuEg3iSs43VgcXnuGvQKTUdD_ZZ3GU\",\r\n  authDomain: \"virt-hr.firebaseapp.com\",\r\n  databaseURL: \"https://virt-hr-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n  projectId: \"virt-hr\",\r\n  storageBucket: \"virt-hr.appspot.com\",\r\n  messagingSenderId: \"1082405188604\",\r\n  appId: \"1:1082405188604:web:047080638b0bcd8608f879\"\r\n}\r\n\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore();\r\n}\r\n\r\nexport const db = firebase.firestore();\r\n\r\nexport default firebase;\r\n","import { toast } from \"react-toastify\";\r\nimport Admin from \"../abis/Admin.json\";\r\nimport { db } from \"./firebase\";\r\n\r\nexport const messageAdmin = async (info, message) => {\r\n  const web3 = window.web3;\r\n  const accounts = await web3.eth.getAccounts();\r\n  const networkId = await web3.eth.net.getId();\r\n  const AdminData = await Admin.networks[networkId];\r\n  const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n  const owner = await admin.methods?.owner().call();\r\n  var key = \"\";\r\n  if (owner < accounts[0]) key = owner + \"#\" + accounts[0];\r\n  else key = accounts[0] + \"#\" + owner;\r\n  try {\r\n    await db\r\n      .collection(\"chats\")\r\n      .doc(key)\r\n      .collection(\"chatmessages\")\r\n      .add({\r\n        info: { ...info, ethAddress: accounts[0] },\r\n        message: message,\r\n        sender: accounts[0],\r\n        receiver: owner,\r\n        timeStamp: new Date(),\r\n      });\r\n\r\n    const doc = await db\r\n      .collection(\"users\")\r\n      .doc(accounts[0])\r\n      .collection(\"activechats\")\r\n      .doc(owner)\r\n      .get();\r\n    if (!doc.exists) {\r\n      await db\r\n        .collection(\"users\")\r\n        .doc(accounts[0])\r\n        .collection(\"activechats\")\r\n        .doc(owner)\r\n        .set({\r\n          name: \"Admin\",\r\n          ethAddress: owner,\r\n        });\r\n      await db\r\n        .collection(\"users\")\r\n        .doc(owner)\r\n        .collection(\"activechats\")\r\n        .doc(accounts[0])\r\n        .set({\r\n          name: info.name,\r\n          ethAddress: accounts[0],\r\n        });\r\n    }\r\n    toast.success(\"One of the admins will get back to you shortly!\");\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const reqWorkexpEndorsementFunc = async (workexp) => {\r\n  const { organization, role, startdate, enddate, description } = workexp;\r\n  const web3 = window.web3;\r\n  const accounts = await web3.eth.getAccounts();\r\n  var key;\r\n  if (organization < accounts[0]) {\r\n    key = organization + \"#\" + accounts[0];\r\n  } else {\r\n    key = accounts[0] + \"#\" + organization;\r\n  }\r\n  try {\r\n    await db\r\n      .collection(\"chats\")\r\n      .doc(key)\r\n      .collection(\"chatmessages\")\r\n      .add({\r\n        info: {\r\n          req: \"Work Experience Endorsement Request\",\r\n          description,\r\n          organization,\r\n          startdate,\r\n          enddate,\r\n          role,\r\n          ethAddress: accounts[0],\r\n        },\r\n        message: \"Please endorse!!\",\r\n        sender: accounts[0],\r\n        receiver: organization,\r\n        timeStamp: new Date(),\r\n      });\r\n    const doc = await db\r\n      .collection(\"users\")\r\n      .doc(accounts[0])\r\n      .collection(\"activechats\")\r\n      .doc(organization)\r\n      .get();\r\n    if (!doc.exists) {\r\n      await db\r\n        .collection(\"users\")\r\n        .doc(accounts[0])\r\n        .collection(\"activechats\")\r\n        .doc(organization)\r\n        .set({\r\n          name: \"Organization\",\r\n          ethAddress: organization,\r\n        });\r\n      await db\r\n        .collection(\"users\")\r\n        .doc(organization)\r\n        .collection(\"activechats\")\r\n        .doc(accounts[0])\r\n        .set({\r\n          name: \"Employee\",\r\n          ethAddress: accounts[0],\r\n        });\r\n    }\r\n    toast.success(\"Endorsement request sent!!\");\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const reqEducationEndorsementFunc = async (education) => {\r\n  const { institute, description, startdate, enddate } = education;\r\n  const web3 = window.web3;\r\n  const accounts = await web3.eth.getAccounts();\r\n  var key;\r\n  if (institute < accounts[0]) {\r\n    key = institute + \"#\" + accounts[0];\r\n  } else {\r\n    key = accounts[0] + \"#\" + institute;\r\n  }\r\n  try {\r\n    await db\r\n      .collection(\"chats\")\r\n      .doc(key)\r\n      .collection(\"chatmessages\")\r\n      .add({\r\n        info: {\r\n          req: \"Education Endorsement Request\",\r\n          description,\r\n          institute,\r\n          startdate,\r\n          enddate,\r\n          ethAddress: accounts[0],\r\n        },\r\n        message: \"Please endorse!!\",\r\n        sender: accounts[0],\r\n        receiver: institute,\r\n        timeStamp: new Date(),\r\n      });\r\n    const doc = await db\r\n      .collection(\"users\")\r\n      .doc(accounts[0])\r\n      .collection(\"activechats\")\r\n      .doc(institute)\r\n      .get();\r\n    if (!doc.exists) {\r\n      await db\r\n        .collection(\"users\")\r\n        .doc(accounts[0])\r\n        .collection(\"activechats\")\r\n        .doc(institute)\r\n        .set({\r\n          name: \"Institute\",\r\n          ethAddress: institute,\r\n        });\r\n      await db\r\n        .collection(\"users\")\r\n        .doc(institute)\r\n        .collection(\"activechats\")\r\n        .doc(accounts[0])\r\n        .set({\r\n          name: \"Employee\",\r\n          ethAddress: accounts[0],\r\n        });\r\n    }\r\n    toast.success(\"Endorsement request sent!!\");\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const reqCertiEndorsementFunc = async (certification) => {\r\n  const { name, organization, score } = certification;\r\n  const web3 = window.web3;\r\n  const accounts = await web3.eth.getAccounts();\r\n  var key;\r\n  if (organization < accounts[0]) {\r\n    key = organization + \"#\" + accounts[0];\r\n  } else {\r\n    key = accounts[0] + \"#\" + organization;\r\n  }\r\n  try {\r\n    await db\r\n      .collection(\"chats\")\r\n      .doc(key)\r\n      .collection(\"chatmessages\")\r\n      .add({\r\n        info: {\r\n          req: \"Certification Endorsement Request\",\r\n          name,\r\n          organization,\r\n          score,\r\n          ethAddress: accounts[0],\r\n        },\r\n        message: \"Please endorse!!\",\r\n        sender: accounts[0],\r\n        receiver: organization,\r\n        timeStamp: new Date(),\r\n      });\r\n    const doc = await db\r\n      .collection(\"users\")\r\n      .doc(accounts[0])\r\n      .collection(\"activechats\")\r\n      .doc(organization)\r\n      .get();\r\n    if (!doc.exists) {\r\n      await db\r\n        .collection(\"users\")\r\n        .doc(accounts[0])\r\n        .collection(\"activechats\")\r\n        .doc(organization)\r\n        .set({\r\n          name: \"Certification Organization\",\r\n          ethAddress: organization,\r\n        });\r\n      await db\r\n        .collection(\"users\")\r\n        .doc(organization)\r\n        .collection(\"activechats\")\r\n        .doc(accounts[0])\r\n        .set({\r\n          name: \"Certified Employee\",\r\n          ethAddress: accounts[0],\r\n        });\r\n    }\r\n    toast.success(\"Endorsement request sent!!\");\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Card, Grid } from \"semantic-ui-react\";\r\nimport Admin from \"../../abis/Admin.json\";\r\nimport Employee from \"../../abis/Employee.json\";\r\nimport LineChart from \"../../components/LineChart\";\r\nimport SkillCard from \"../../components/SkillCard\";\r\nimport \"./Employee.css\";\r\nimport \"./UpdateProfile.css\";\r\nimport { buildStyles, CircularProgressbar } from \"react-circular-progressbar\";\r\nimport GetCertificationModal from \"../../components/GetCertificationModal\";\r\nimport GetWorkExpModal from \"../../components/GetWorkExpModal\";\r\nimport GetSkillsModal from \"../../components/GetSkillsModals\";\r\nimport GetEducationModal from \"../../components/GetEducationModal\";\r\nimport GetEditFieldModal from \"../../components/GetEditFieldModal\";\r\nimport LoadComp from \"../../components/LoadComp\";\r\nimport CodeforcesGraph from \"../../components/CodeforcesGraph\";\r\nimport {\r\n  reqCertiEndorsementFunc,\r\n  reqEducationEndorsementFunc,\r\n  reqWorkexpEndorsementFunc,\r\n} from \"../../firebase/api\";\r\n\r\nexport default class UpdateProfile extends Component {\r\n  state = {\r\n    employeedata: {},\r\n    overallEndorsement: [],\r\n    skills: [],\r\n    certifications: [],\r\n    workExps: [],\r\n    educations: [],\r\n    colour: [\"#b6e498\", \"#61dafb\", \"#764abc\", \"#83cd29\", \"#00d1b2\"],\r\n    readmore: false,\r\n    certificationModal: false,\r\n    workexpModal: false,\r\n    skillmodal: false,\r\n    educationmodal: false,\r\n    editFieldModal: false,\r\n    isDescription: false,\r\n    loadcomp: false,\r\n    EmployeeContract: {},\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({ loadcomp: true });\r\n    const web3 = window.web3;\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    const accounts = await web3.eth.getAccounts();\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const employeeContractAddress = await admin?.methods\r\n        ?.getEmployeeContractByAddress(accounts[0])\r\n        .call();\r\n      const EmployeeContract = await new web3.eth.Contract(\r\n        Employee.abi,\r\n        employeeContractAddress\r\n      );\r\n      this.setState({ EmployeeContract });\r\n      this.getSkills(EmployeeContract);\r\n      this.getCertifications(EmployeeContract);\r\n      this.getWorkExp(EmployeeContract);\r\n      this.getEducation(EmployeeContract);\r\n      const employeedata = await EmployeeContract.methods\r\n        .getEmployeeInfo()\r\n        .call();\r\n      const newEmployedata = {\r\n        ethAddress: employeedata[0],\r\n        name: employeedata[1],\r\n        location: employeedata[2],\r\n        description: employeedata[3],\r\n        overallEndorsement: employeedata[4],\r\n        endorsecount: employeedata[5],\r\n      };\r\n      const endorseCount = newEmployedata.endorsecount;\r\n      const overallEndorsement = await Promise.all(\r\n        Array(parseInt(endorseCount))\r\n          .fill()\r\n          .map((ele, index) =>\r\n            EmployeeContract?.methods?.overallEndorsement(index).call()\r\n          )\r\n      );\r\n      console.log(overallEndorsement);\r\n      this.setState({ employeedata: newEmployedata, overallEndorsement });\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n    this.setState({ loadcomp: false });\r\n  };\r\n\r\n  getSkills = async (EmployeeContract) => {\r\n    const skillCount = await EmployeeContract?.methods?.getSkillCount().call();\r\n    const skills = await Promise.all(\r\n      Array(parseInt(skillCount))\r\n        .fill()\r\n        .map((ele, index) =>\r\n          EmployeeContract?.methods?.getSkillByIndex(index).call()\r\n        )\r\n    );\r\n\r\n    var newskills = [];\r\n    skills.forEach((certi) => {\r\n      newskills.push({\r\n        name: certi[0],\r\n        overall_percentage: certi[1],\r\n        experience: certi[2],\r\n        endorsed: certi[3],\r\n        endorser_address: certi[4],\r\n        review: certi[5],\r\n        visible: certi[6],\r\n      });\r\n      return;\r\n    });\r\n\r\n    this.setState({ skills: newskills });\r\n  };\r\n\r\n  getCertifications = async (EmployeeContract) => {\r\n    const certiCount = await EmployeeContract?.methods\r\n      ?.getCertificationCount()\r\n      .call();\r\n    const certifications = await Promise.all(\r\n      Array(parseInt(certiCount))\r\n        .fill()\r\n        .map((ele, index) =>\r\n          EmployeeContract?.methods?.getCertificationByIndex(index).call()\r\n        )\r\n    );\r\n    var newcertifications = [];\r\n    certifications.forEach((certi) => {\r\n      newcertifications.push({\r\n        name: certi[0],\r\n        organization: certi[1],\r\n        score: certi[2],\r\n        endorsed: certi[3],\r\n        visible: certi[4],\r\n      });\r\n      return;\r\n    });\r\n    this.setState({ certifications: newcertifications });\r\n  };\r\n\r\n  getWorkExp = async (EmployeeContract) => {\r\n    const workExpCount = await EmployeeContract?.methods\r\n      ?.getWorkExpCount()\r\n      .call();\r\n    const workExps = await Promise.all(\r\n      Array(parseInt(workExpCount))\r\n        .fill()\r\n        .map((ele, index) =>\r\n          EmployeeContract?.methods?.getWorkExpByIndex(index).call()\r\n        )\r\n    );\r\n\r\n    var newworkExps = [];\r\n    workExps.forEach((work) => {\r\n      newworkExps.push({\r\n        role: work[0],\r\n        organization: work[1],\r\n        startdate: work[2],\r\n        enddate: work[3],\r\n        endorsed: work[4],\r\n        description: work[5],\r\n        visible: work[6],\r\n      });\r\n      return;\r\n    });\r\n\r\n    this.setState({ workExps: newworkExps });\r\n  };\r\n\r\n  getEducation = async (EmployeeContract) => {\r\n    const educationCount = await EmployeeContract?.methods\r\n      ?.getEducationCount()\r\n      .call();\r\n    const educations = await Promise.all(\r\n      Array(parseInt(educationCount))\r\n        .fill()\r\n        .map((ele, index) =>\r\n          EmployeeContract?.methods?.getEducationByIndex(index).call()\r\n        )\r\n    );\r\n    var neweducation = [];\r\n    educations.forEach((certi) => {\r\n      neweducation.push({\r\n        institute: certi[0],\r\n        startdate: certi[1],\r\n        enddate: certi[2],\r\n        endorsed: certi[3],\r\n        description: certi[4],\r\n      });\r\n      return;\r\n    });\r\n    this.setState({ educations: neweducation });\r\n  };\r\n\r\n  closeCertificationModal = () => {\r\n    this.setState({ certificationModal: false });\r\n    this.getCertifications(this.state.EmployeeContract);\r\n  };\r\n\r\n  closeWorkExpModal = () => {\r\n    this.setState({ workexpModal: false });\r\n    this.getWorkExp(this.state.EmployeeContract);\r\n  };\r\n\r\n  closeSkillModal = () => {\r\n    this.setState({ skillmodal: false });\r\n    this.getSkills(this.state.EmployeeContract);\r\n  };\r\n\r\n  closeEducationModal = () => {\r\n    this.setState({ educationmodal: false });\r\n    this.getEducation(this.state.EmployeeContract);\r\n  };\r\n\r\n  closeEditFieldModal = () => {\r\n    this.setState({ editFieldModal: false });\r\n  };\r\n\r\n  certificationVisibility = async (name) => {\r\n    const web3 = window.web3;\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    const accounts = await web3.eth.getAccounts();\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const employeeContractAddress = await admin?.methods\r\n        ?.getEmployeeContractByAddress(accounts[0])\r\n        .call();\r\n      const EmployeeContract = await new web3.eth.Contract(\r\n        Employee.abi,\r\n        employeeContractAddress\r\n      );\r\n      await EmployeeContract?.methods\r\n        ?.deleteCertification(name)\r\n        .send({ from: accounts[0] });\r\n      toast.success(\"Certification visibility changed successfully!!\");\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n    this.getCertifications(this.state.EmployeeContract);\r\n  };\r\n\r\n  workExpVisibility = async (org) => {\r\n    const web3 = window.web3;\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    const accounts = await web3.eth.getAccounts();\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const employeeContractAddress = await admin?.methods\r\n        ?.getEmployeeContractByAddress(accounts[0])\r\n        .call();\r\n      const EmployeeContract = await new web3.eth.Contract(\r\n        Employee.abi,\r\n        employeeContractAddress\r\n      );\r\n      await EmployeeContract?.methods\r\n        ?.deleteWorkExp(org)\r\n        .send({ from: accounts[0] });\r\n      toast.success(\"Work Exp. visibility changed successfully!!\");\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n    this.getWorkExp(this.state.EmployeeContract);\r\n  };\r\n\r\n  reqEducationEndorsement = async (education) => {\r\n    reqEducationEndorsementFunc(education);\r\n  };\r\n\r\n  reqCertiEndorsement = async (certi) => {\r\n    reqCertiEndorsementFunc(certi);\r\n  };\r\n\r\n  reqWorkexpEndorsement = async (workExp) => {\r\n    reqWorkexpEndorsementFunc(workExp);\r\n  };\r\n\r\n  render() {\r\n    return this.state.loadcomp ? (\r\n      <LoadComp />\r\n    ) : (\r\n      <div>\r\n        <GetCertificationModal\r\n          isOpen={this.state.certificationModal}\r\n          closeCertificationModal={this.closeCertificationModal}\r\n        />\r\n        <GetWorkExpModal\r\n          isOpen={this.state.workexpModal}\r\n          closeCertificationModal={this.closeWorkExpModal}\r\n        />\r\n        <GetSkillsModal\r\n          isOpen={this.state.skillmodal}\r\n          closeCertificationModal={this.closeSkillModal}\r\n        />\r\n        <GetEducationModal\r\n          isOpen={this.state.educationmodal}\r\n          closeCertificationModal={this.closeEducationModal}\r\n        />\r\n\r\n        <GetEditFieldModal\r\n          isOpen={this.state.editFieldModal}\r\n          closeEditFieldModal={this.closeEditFieldModal}\r\n          name={this.state.employeedata?.name}\r\n          location={this.state.employeedata?.location}\r\n          description={this.state.employeedata?.description}\r\n          isDescription={this.state.isDescription}\r\n        />\r\n\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={6}>\r\n              <Card className=\"personal-info\">\r\n                <Card.Content>\r\n                  <Card.Header>\r\n                    <div className=\"edit-heading\">\r\n                      <span>{this.state.employeedata?.name}</span>\r\n                      <span\r\n                        className=\"add-button\"\r\n                        onClick={(e) =>\r\n                          this.setState({\r\n                            editFieldModal: !this.state.editFieldModal,\r\n                            isDescription: false,\r\n                          })\r\n                        }\r\n                      >\r\n                        <i class=\"fas fa-pencil-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <small\r\n                      style={{ wordBreak: \"break-word\", color: \"#c5c6c7\" }}\r\n                    >\r\n                      {this.state.employeedata?.ethAddress}\r\n                    </small>\r\n                  </Card.Header>\r\n                  <br />\r\n                  <div>\r\n                    <p>\r\n                      <em>Location: </em>\r\n                      <span style={{ color: \"#c5c6c7\" }}>\r\n                        {this.state.employeedata?.location}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                    <p>\r\n                      <em>Overall Endorsement Rating:</em>\r\n                    </p>\r\n                    <LineChart\r\n                      overallEndorsement={this.state.overallEndorsement}\r\n                    />\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n              <Card className=\"employee-des\">\r\n                <Card.Content>\r\n                  <Card.Header>\r\n                    <div className=\"edit-heading\">\r\n                      <span>About</span>\r\n                      <span\r\n                        className=\"add-button\"\r\n                        onClick={(e) =>\r\n                          this.setState({\r\n                            editFieldModal: !this.state.editFieldModal,\r\n                            isDescription: true,\r\n                          })\r\n                        }\r\n                      >\r\n                        <i class=\"fas fa-pencil-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                  </Card.Header>\r\n                  <div>\r\n                    <p style={{ color: \"#c5c6c7\" }}>\r\n                      {this.state.employeedata?.description}\r\n                    </p>\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                    <span\r\n                      className=\"add-button\"\r\n                      onClick={(e) =>\r\n                        this.setState({\r\n                          educationmodal: !this.state.educationmodal,\r\n                        })\r\n                      }\r\n                    >\r\n                      <i class=\"fas fa-plus\"></i>\r\n                    </span>\r\n\r\n                    <Card.Header\r\n                      style={{ fontSize: \"19px\", fontWeight: \"600\" }}\r\n                    >\r\n                      Education\r\n                    </Card.Header>\r\n                    <br />\r\n                    <div className=\"education\">\r\n                      {this.state.educations?.map((education, index) => (\r\n                        <div className=\"education-design\" key={index}>\r\n                          <div\r\n                            style={{ paddingRight: \"50px\", color: \"#c5c6c7\" }}\r\n                          >\r\n                            <p>{education.description}</p>\r\n                            <small style={{ wordBreak: \"break-word\" }}>\r\n                              {education.institute}\r\n                            </small>\r\n                          </div>\r\n                          <div>\r\n                            <small style={{ color: \"#c5c6c7\" }}>\r\n                              <em>\r\n                                {education.startdate} - {education.enddate}\r\n                              </em>\r\n                            </small>\r\n                            <p\r\n                              style={{\r\n                                color: education.endorsed\r\n                                  ? \"#00d1b2\"\r\n                                  : \"yellow\",\r\n                                opacity: \"0.7\",\r\n                              }}\r\n                            >\r\n                              {education.endorsed ? (\r\n                                \"Endorsed\"\r\n                              ) : (\r\n                                <div\r\n                                  className=\"endorsement-req-button\"\r\n                                  onClick={() =>\r\n                                    this.reqEducationEndorsement(education)\r\n                                  }\r\n                                >\r\n                                  Request Endorsement\r\n                                </div>\r\n                              )}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n              \r\n            </Grid.Column>\r\n            <Grid.Column width={10}>\r\n            <Card className=\"employee-des\">\r\n                <Card.Content>\r\n                  <Card.Header>Competetive Platform Ratings</Card.Header>\r\n                  <CodeforcesGraph />\r\n                </Card.Content>\r\n              </Card>\r\n              <Card className=\"employee-des\">\r\n                <Card.Content>\r\n                  <span\r\n                    className=\"add-button\"\r\n                    onClick={(e) =>\r\n                      this.setState({\r\n                        certificationModal: !this.state.certificationModal,\r\n                      })\r\n                    }\r\n                  >\r\n                    <i class=\"fas fa-plus\"></i>\r\n                  </span>\r\n                  <Card.Header>Certifications</Card.Header>\r\n                  <br />\r\n                  <br />\r\n                  <div>\r\n                    {this.state.certifications?.map((certi, index) => (\r\n                      <div key={index} className=\"certification-container\">\r\n                        <div style={{ color: \"#c5c6c7\" }}>\r\n                          <p>\r\n                            {certi.name}\r\n                            <span\r\n                              className=\"delete-button-visiblility\"\r\n                              onClick={(e) =>\r\n                                this.certificationVisibility(certi.name)\r\n                              }\r\n                            >\r\n                              {!certi.visible ? (\r\n                                <i class=\"fas fa-eye-slash\"></i>\r\n                              ) : (\r\n                                <i class=\"fas fa-eye\"></i>\r\n                              )}\r\n                            </span>\r\n                          </p>\r\n                          <small style={{ wordBreak: \"break-word\" }}>\r\n                            {certi.organization}\r\n                          </small>\r\n                          <p\r\n                            style={{\r\n                              color: certi.endorsed ? \"#00d1b2\" : \"yellow\",\r\n                              opacity: \"0.7\",\r\n                            }}\r\n                          >\r\n                            {certi.endorsed ? (\r\n                              \"Endorsed\"\r\n                            ) : (\r\n                              <div\r\n                                className=\"endorsement-req-button\"\r\n                                onClick={() => this.reqCertiEndorsement(certi)}\r\n                              >\r\n                                Request Endorsement\r\n                              </div>\r\n                            )}\r\n                          </p>\r\n                        </div>\r\n                        <div>\r\n                          <div style={{ width: \"100px\" }}>\r\n                            <CircularProgressbar\r\n                              value={certi.score}\r\n                              text={`Score - ${certi.score}%`}\r\n                              strokeWidth=\"5\"\r\n                              styles={buildStyles({\r\n                                strokeLinecap: \"round\",\r\n                                textSize: \"12px\",\r\n                                pathTransitionDuration: 1,\r\n                                pathColor: `rgba(255,255,255, ${\r\n                                  certi.score / 100\r\n                                })`,\r\n                                textColor: \"#c5c6c7\",\r\n                                trailColor: \"#393b3fa6\",\r\n                                backgroundColor: \"#c5c6c7\",\r\n                              })}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n              <Card className=\"employee-des\">\r\n                <Card.Content>\r\n                  <span\r\n                    className=\"add-button\"\r\n                    onClick={(e) =>\r\n                      this.setState({\r\n                        workexpModal: !this.state.workexpModal,\r\n                      })\r\n                    }\r\n                  >\r\n                    <i class=\"fas fa-plus\"></i>\r\n                  </span>\r\n                  <Card.Header>Work Experiences</Card.Header>\r\n                  <br />\r\n                  <div className=\"education\">\r\n                    {this.state.workExps?.map((workExp, index) => (\r\n                      <div className=\"education-design\" key={index}>\r\n                        <div style={{ color: \"#c5c6c7\" }}>\r\n                          <p>\r\n                            {workExp.role}\r\n                            <span\r\n                              className=\"delete-button-visiblility\"\r\n                              onClick={(e) =>\r\n                                this.workExpVisibility(workExp.organization)\r\n                              }\r\n                            >\r\n                              {!workExp.visible ? (\r\n                                <i class=\"fas fa-eye-slash\"></i>\r\n                              ) : (\r\n                                <i class=\"fas fa-eye\"></i>\r\n                              )}\r\n                            </span>\r\n                          </p>\r\n                          <small style={{ wordBreak: \"break-word\" }}>\r\n                            {workExp.organization}\r\n                          </small>\r\n                        </div>\r\n                        <div>\r\n                          <small style={{ color: \"#c5c6c7\" }}>\r\n                            <em>\r\n                              {workExp.startdate} - {workExp.enddate}\r\n                            </em>\r\n                          </small>\r\n                          <p\r\n                            style={{\r\n                              color: workExp.endorsed ? \"#00d1b2\" : \"yellow\",\r\n                              opacity: \"0.7\",\r\n                            }}\r\n                          >\r\n                            {workExp.endorsed ? (\r\n                              \"Endorsed\"\r\n                            ) : (\r\n                              <div\r\n                                className=\"endorsement-req-button\"\r\n                                onClick={() =>\r\n                                  this.reqWorkexpEndorsement(workExp)\r\n                                }\r\n                              >\r\n                                Request Endorsement\r\n                              </div>\r\n                            )}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n              <Card className=\"employee-des\">\r\n                <Card.Content>\r\n                  <span\r\n                    className=\"add-button\"\r\n                    onClick={(e) =>\r\n                      this.setState({\r\n                        skillmodal: !this.state.skillmodal,\r\n                      })\r\n                    }\r\n                  >\r\n                    <i class=\"fas fa-plus\"></i>\r\n                  </span>\r\n                  <Card.Header>Skills</Card.Header>\r\n                  <br />\r\n                  <br />\r\n                  <div className=\"skill-height-container\">\r\n                    {this.state.skills?.map((skill, index) => (\r\n                      <div>\r\n                        <SkillCard skill={skill} key={index} update />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Form, Header, Input, Modal } from \"semantic-ui-react\";\r\nimport Admin from \"../abis/Admin.json\";\r\nimport OrgEnd from \"../abis/OrganizationEndorser.json\";\r\nimport \"./Modals.css\";\r\nimport ScanQR from \"./ScanQR\";\r\n\r\nexport default class GetEmployeeModal extends Component {\r\n  state = {\r\n    employee_address: \"\",\r\n    loading: false,\r\n    scanQR: false,\r\n  };\r\n  handleSubmit = async (e) => {\r\n    const { employee_address } = this.state;\r\n    if (!employee_address) {\r\n      toast.error(\"Please enter all the fields.\");\r\n      return;\r\n    }\r\n    this.setState({ loading: true });\r\n    e.preventDefault();\r\n    const web3 = window.web3;\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    const accounts = await web3.eth.getAccounts();\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const orgContractAddress = await admin?.methods\r\n        ?.getOrganizationContractByAddress(accounts[0])\r\n        .call();\r\n      const orgContract = await new web3.eth.Contract(\r\n        OrgEnd.abi,\r\n        orgContractAddress\r\n      );\r\n      try {\r\n        await orgContract.methods.addEmployees(employee_address).send({\r\n          from: accounts[0],\r\n        });\r\n        toast.success(\"Candidate Added Successfully!!\");\r\n      } catch (err) {\r\n        toast.error(err.message);\r\n      }\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n    this.setState({ loading: false });\r\n    this.props.closeEmployeeModal();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  closeScanQRModal = () => {\r\n    this.setState({ scanQR: false });\r\n  };\r\n\r\n  handleAddAddress = (res) => {\r\n    this.setState({ employee_address: res });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ScanQR\r\n          isOpen={this.state.scanQR}\r\n          closeScanQRModal={this.closeScanQRModal}\r\n          handleAddAddress={this.handleAddAddress}\r\n        />\r\n        <Modal\r\n          as={Form}\r\n          onSubmit={(e) => this.handleSubmit(e)}\r\n          open={this.props.isOpen}\r\n          size=\"tiny\"\r\n          className=\"modal-des\"\r\n        >\r\n          <Header\r\n            className=\"modal-heading\"\r\n            icon=\"pencil\"\r\n            content=\"Enter Candidate Address\"\r\n            as=\"h2\"\r\n          />\r\n          <Modal.Content className=\"modal-content\">\r\n            <Form className=\"form-inputs\">\r\n              <Form.Field className=\"form-inputs\">\r\n                <Input action>\r\n                  <input\r\n                    id=\"employee_address\"\r\n                    placeholder=\"Candidate Address\"\r\n                    autoComplete=\"off\"\r\n                    autoCorrect=\"off\"\r\n                    value={this.state.employee_address}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Button\r\n                    type=\"button\"\r\n                    content=\"QR\"\r\n                    icon=\"qrcode\"\r\n                    onClick={() => this.setState({ scanQR: true })}\r\n                  />\r\n                </Input>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions className=\"modal-actions\">\r\n            <Button\r\n              className=\"close-button\"\r\n              type=\"button\"\r\n              color=\"red\"\r\n              icon=\"times\"\r\n              content=\"Close\"\r\n              onClick={() => this.props.closeEmployeeModal()}\r\n            />\r\n            <Button\r\n              className=\"button-css\"\r\n              type=\"submit\"\r\n              color=\"green\"\r\n              icon=\"save\"\r\n              content=\"Save\"\r\n              loading={this.state.loading}\r\n            />\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Organization from \"../../abis/OrganizationEndorser.json\";\r\nimport Admin from \"../../abis/Admin.json\";\r\nimport { toast } from \"react-toastify\";\r\nimport OrgEndCard from \"../../components/OrgEndCard\";\r\nimport EmployeeCard from \"../../components/EmployeeCard\";\r\nimport \"./Organization.css\";\r\nimport GetEmployeeModal from \"../../components/GetEmployeeModal\";\r\nimport LoadComp from \"../../components/LoadComp\";\r\n\r\nexport default class OrganizationEndorser extends Component {\r\n  state = {\r\n    orgcontractAddress: \"\",\r\n    employees: [],\r\n    employeemodal: false,\r\n    loadcomp: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({ loadcomp: true });\r\n    await this.getEmployees();\r\n    this.setState({ loadcomp: false });\r\n  };\r\n\r\n  getEmployees = async () => {\r\n    const web3 = window.web3;\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    const accounts = await web3.eth.getAccounts();\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const orgContractAddress = await admin?.methods\r\n        ?.getOrganizationContractByAddress(accounts[0])\r\n        .call();\r\n      const orgContract = await new web3.eth.Contract(\r\n        Organization.abi,\r\n        orgContractAddress\r\n      );\r\n\r\n      const employeeCount = await orgContract?.methods?.totalEmployees().call();\r\n\r\n      const employees = await Promise.all(\r\n        Array(parseInt(employeeCount))\r\n          .fill()\r\n          .map(async (ele, index) => {\r\n            const employee = await orgContract?.methods\r\n              ?.getEmployeeByIndex(index)\r\n              .call();\r\n            return admin.methods.getEmployeeContractByAddress(employee).call();\r\n          })\r\n      );\r\n      // console.log(\"emp\", employees);\r\n\r\n      this.setState({ orgContractAddress, employees });\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n  };\r\n\r\n  closeEmployeeModal = () => {\r\n    this.setState({ employeemodal: false });\r\n    this.getEmployees();\r\n  };\r\n\r\n  render() {\r\n    return this.state.loadcomp ? (\r\n      <LoadComp />\r\n    ) : (\r\n      <div>\r\n        <GetEmployeeModal\r\n          isOpen={this.state.employeemodal}\r\n          closeEmployeeModal={this.closeEmployeeModal}\r\n        />\r\n        {this.state.orgContractAddress && (\r\n          <OrgEndCard OrgEndContractAddress={this.state.orgContractAddress} />\r\n        )}\r\n        <br />\r\n        <div>\r\n          <div\r\n            style={{ width: \"68%\", marginLeft: \"auto\", marginRight: \"auto\" }}\r\n          >\r\n            <span\r\n              className=\"add-employee\"\r\n              onClick={(e) =>\r\n                this.setState({\r\n                  employeemodal: !this.state.employeemodal,\r\n                })\r\n              }\r\n            >\r\n              <span class=\"fas fa-plus\">&nbsp;Add Candidate</span>\r\n            </span>\r\n            <h2 className=\"org-card-heading\">Candidates in the organization</h2>\r\n          </div>\r\n          <br />\r\n          {this.state.employees?.map((employee, index) => (\r\n            <EmployeeCard key={index} employeeContractAddress={employee} />\r\n          ))}\r\n        </div>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Card, Form, Input, Message } from \"semantic-ui-react\";\r\nimport \"./EndorsePage.css\";\r\nimport Admin from \"../../abis/Admin.json\";\r\nimport Employee from \"../../abis/Employee.json\";\r\nimport Skills from \"../../abis/Skills.json\";\r\nimport { toast } from \"react-toastify\";\r\nimport ScanQR from \"../../components/ScanQR\";\r\n\r\nexport default class EndorseSkil extends Component {\r\n  state = {\r\n    employee_address_skill: \"\",\r\n    skill_name: \"\",\r\n    skill_score: \"\",\r\n    skill_review: \"\",\r\n    skillError: \"\",\r\n    skillLoading: false,\r\n    scanQR: false,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  handleSkillEndorse = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ skillLoading: true, skillError: \"\" });\r\n    const { employee_address_skill, skill_name, skill_score, skill_review } =\r\n      this.state;\r\n    if (\r\n      !employee_address_skill ||\r\n      !skill_name ||\r\n      !(skill_score >= 1 && skill_score <= 100) ||\r\n      !skill_review\r\n    ) {\r\n      toast.error(\"Please enter all the fields.\");\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    const web3 = window.web3;\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    const SkillData = await Skills.networks[networkId];\r\n    const accounts = await web3.eth.getAccounts();\r\n    if (AdminData && SkillData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const skills = await new web3.eth.Contract(Skills.abi, SkillData.address);\r\n      const employeeContractAddress = await admin?.methods\r\n        ?.getEmployeeContractByAddress(employee_address_skill)\r\n        .call();\r\n      const EmployeeContract = await new web3.eth.Contract(\r\n        Employee.abi,\r\n        employeeContractAddress\r\n      );\r\n\r\n      try {\r\n        await EmployeeContract.methods\r\n          .endorseSkill(skill_name, skill_score, skill_review)\r\n          .send({\r\n            from: accounts[0],\r\n          });\r\n        await skills?.methods\r\n          ?.addEmployeeToSkill(skill_name, employee_address_skill)\r\n          .send({ from: accounts[0] });\r\n        toast.success(\"Skill Endorsed successfully!!\");\r\n      } catch (err) {\r\n        this.setState({ skillError: err.message });\r\n      }\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n    this.setState({\r\n      skillLoading: false,\r\n      skill_name: \"\",\r\n      skill_review: \"\",\r\n      skill_score: \"\",\r\n      employee_address_skill: \"\",\r\n    });\r\n  };\r\n\r\n  closeScanQRModal = () => {\r\n    this.setState({ scanQR: false });\r\n  };\r\n\r\n  handleAddAddress = (res) => {\r\n    this.setState({ employee_address_skill: res });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ScanQR\r\n          isOpen={this.state.scanQR}\r\n          closeScanQRModal={this.closeScanQRModal}\r\n          handleAddAddress={this.handleAddAddress}\r\n        />\r\n        <div className=\"endorse-section\">\r\n          <Card className=\"card-style\">\r\n            <Card.Content>\r\n              <Card.Header>\r\n                <h2 className=\"card-heading\">Endorse Skill</h2>\r\n              </Card.Header>\r\n              <br />\r\n              <div>\r\n                <Form\r\n                  className=\"form-inputs\"\r\n                  onSubmit={this.handleSkillEndorse}\r\n                  error={!!this.state.skillError}\r\n                >\r\n                  <Form.Field className=\"form-inputs\">\r\n                    <Input action>\r\n                      <input\r\n                        id=\"employee_address_skill\"\r\n                        placeholder=\"Candidate Address\"\r\n                        autoComplete=\"off\"\r\n                        autoCorrect=\"off\"\r\n                        value={this.state.employee_address_skill}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                      <Button\r\n                        type=\"button\"\r\n                        content=\"QR\"\r\n                        icon=\"qrcode\"\r\n                        onClick={() => this.setState({ scanQR: true })}\r\n                      />\r\n                    </Input>\r\n                  </Form.Field>\r\n                  <Form.Field className=\"form-inputs\">\r\n                    <input\r\n                      id=\"skill_name\"\r\n                      placeholder=\"Skill Name\"\r\n                      autoComplete=\"off\"\r\n                      autoCorrect=\"off\"\r\n                      value={this.state.skill_name}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field className=\"form-inputs\">\r\n                    <input\r\n                      id=\"skill_score\"\r\n                      placeholder=\"Skill Level (1-100)\"\r\n                      autoComplete=\"off\"\r\n                      autoCorrect=\"off\"\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      max=\"100\"\r\n                      value={this.state.skill_score}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field className=\"form-inputs\">\r\n                    <textarea\r\n                      id=\"skill_review\"\r\n                      placeholder=\"Review\"\r\n                      autoComplete=\"off\"\r\n                      autoCorrect=\"off\"\r\n                      value={this.state.skill_review}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Form.Field>\r\n                  <br />\r\n                  <Message\r\n                    error\r\n                    header=\"Oops!!\"\r\n                    content={this.state.skillError}\r\n                  />\r\n                  <br />\r\n                  <Button\r\n                    className=\"button-css\"\r\n                    type=\"submit\"\r\n                    icon=\"save\"\r\n                    content=\"Endorse\"\r\n                    floated=\"right\"\r\n                    loading={this.state.skillLoading}\r\n                  />\r\n                </Form>\r\n              </div>\r\n            </Card.Content>\r\n          </Card>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Dropdown,\r\n  Form,\r\n  Input,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\nimport \"./EndorsePage.css\";\r\nimport Admin from \"../../abis/Admin.json\";\r\nimport Employee from \"../../abis/Employee.json\";\r\nimport { toast } from \"react-toastify\";\r\nimport ScanQR from \"../../components/ScanQR\";\r\n\r\nexport default class Endorse extends Component {\r\n  state = {\r\n    employee_address: \"\",\r\n    section: \"\",\r\n    skillLoading: false,\r\n    certification_name: \"\",\r\n    scanQR: false,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  handleSkillEndorse = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ skillLoading: true, skillError: \"\" });\r\n    const { employee_address, section, certification_name } = this.state;\r\n    if (!employee_address || !section) {\r\n      toast.error(\"Please enter all the fields.\");\r\n      return;\r\n    }\r\n    if (section === \"3\" && !certification_name) {\r\n      toast.error(\"Please enter all the fields.\");\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    const web3 = window.web3;\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    const accounts = await web3.eth.getAccounts();\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const employeeContractAddress = await admin?.methods\r\n        ?.getEmployeeContractByAddress(employee_address)\r\n        .call();\r\n      const EmployeeContract = await new web3.eth.Contract(\r\n        Employee.abi,\r\n        employeeContractAddress\r\n      );\r\n      // console.log(employeeContractAddress, EmployeeContract);\r\n      try {\r\n        if (section === 1) {\r\n          await EmployeeContract?.methods\r\n            ?.endorseEducation()\r\n            .send({ from: accounts[0] });\r\n        } else if (section === 2) {\r\n          await EmployeeContract?.methods\r\n            ?.endorseWorkExp()\r\n            .send({ from: accounts[0] });\r\n        } else {\r\n          console.log(certification_name);\r\n          await EmployeeContract?.methods\r\n            ?.endorseCertification(certification_name)\r\n            .send({ from: accounts[0] });\r\n        }\r\n        toast.success(\"Endorsed successfully!!\");\r\n      } catch (err) {\r\n        this.setState({ skillError: err.message });\r\n      }\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n    this.setState({\r\n      skillLoading: false,\r\n      section: \"\",\r\n      employee_address: \"\",\r\n    });\r\n  };\r\n\r\n  closeScanQRModal = () => {\r\n    this.setState({ scanQR: false });\r\n  };\r\n\r\n  handleAddAddress = (res) => {\r\n    this.setState({ employee_address: res });\r\n  };\r\n\r\n  roleOptions = [\r\n    {\r\n      key: \"0\",\r\n      text: \"No-Role-Selected\",\r\n      value: \"0\",\r\n    },\r\n    {\r\n      key: \"1\",\r\n      text: \"Endorse Education\",\r\n      value: \"1\",\r\n    },\r\n    {\r\n      key: \"2\",\r\n      text: \"Endorse Work Experience\",\r\n      value: \"2\",\r\n    },\r\n    {\r\n      key: \"3\",\r\n      text: \"Endorse Certification\",\r\n      value: \"3\",\r\n    },\r\n  ];\r\n\r\n  handleDropdownSelect = (e, data) => {\r\n    this.setState({ section: data.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ScanQR\r\n          isOpen={this.state.scanQR}\r\n          closeScanQRModal={this.closeScanQRModal}\r\n          handleAddAddress={this.handleAddAddress}\r\n        />\r\n        <div className=\"endorse-section\">\r\n          <Card className=\"card-style\">\r\n            <Card.Content>\r\n              <Card.Header>\r\n                <h2 className=\"card-heading\">Endorse Section</h2>\r\n              </Card.Header>\r\n              <br />\r\n              <div>\r\n                <Form\r\n                  className=\"form-inputs\"\r\n                  onSubmit={this.handleSkillEndorse}\r\n                  error={!!this.state.skillError}\r\n                >\r\n                  <Form.Field className=\"form-inputs\">\r\n                    <Input action>\r\n                      <input\r\n                        id=\"employee_address\"\r\n                        placeholder=\"Candidate Address\"\r\n                        autoComplete=\"off\"\r\n                        autoCorrect=\"off\"\r\n                        value={this.state.employee_address}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                      <Button\r\n                        type=\"button\"\r\n                        content=\"QR\"\r\n                        icon=\"qrcode\"\r\n                        onClick={() => this.setState({ scanQR: true })}\r\n                      />\r\n                    </Input>\r\n                  </Form.Field>\r\n                  <Form.Field className=\"form-inputs\">\r\n                    <Dropdown\r\n                      placeholder=\"Select Role\"\r\n                      fluid\r\n                      selection\r\n                      options={this.roleOptions}\r\n                      onChange={this.handleDropdownSelect}\r\n                    />\r\n                  </Form.Field>\r\n                  {this.state.section === \"3\" && (\r\n                    <Form.Field className=\"form-inputs\">\r\n                      <input\r\n                        id=\"certification_name\"\r\n                        placeholder=\"Certification Name\"\r\n                        autoComplete=\"off\"\r\n                        autoCorrect=\"off\"\r\n                        value={this.state.certification_name}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </Form.Field>\r\n                  )}\r\n                  <br />\r\n                  <Message\r\n                    error\r\n                    header=\"Oops!!\"\r\n                    content={this.state.skillError}\r\n                  />\r\n                  <br />\r\n                  <Button\r\n                    className=\"button-css\"\r\n                    type=\"submit\"\r\n                    icon=\"save\"\r\n                    content=\"Endorse\"\r\n                    floated=\"right\"\r\n                    loading={this.state.skillLoading}\r\n                  />\r\n                </Form>\r\n              </div>\r\n            </Card.Content>\r\n          </Card>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Employee from \"../abis/Employee.json\";\r\nimport Admin from \"../abis/Admin.json\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass SearchEmp extends Component {\r\n  state = {\r\n    employeedata: {},\r\n    loading: false,\r\n    employeeContractAddress: \"\",\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({ loading: true });\r\n    const empAddress = this.props.emp;\r\n    const web3 = window.web3;\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const employeeContractAddress = await admin.methods\r\n        ?.getEmployeeContractByAddress(empAddress)\r\n        .call();\r\n      const EmployeeContract = await new web3.eth.Contract(\r\n        Employee.abi,\r\n        employeeContractAddress\r\n      );\r\n      const employeedata = await EmployeeContract.methods\r\n        .getEmployeeInfo()\r\n        .call();\r\n      const newEmployedata = {\r\n        ethAddress: employeedata[0],\r\n        name: employeedata[1],\r\n        location: employeedata[2],\r\n        description: employeedata[3],\r\n        overallEndorsement: employeedata[4],\r\n        endorsecount: employeedata[5],\r\n      };\r\n      this.setState({ employeedata: newEmployedata, employeeContractAddress });\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n    this.setState({ loading: false });\r\n  };\r\n\r\n  toRoute = () => {\r\n    this.props.history.push(\r\n      `/getemployee/${this.state.employeeContractAddress}`\r\n    );\r\n    window.location.reload(false);\r\n  };\r\n\r\n  render() {\r\n    return this.state.loading ? (\r\n      <Dimmer active={this.state.loading} inverted>\r\n        <Loader inverted content=\"Fetching...\" />\r\n      </Dimmer>\r\n    ) : (\r\n      <div\r\n        key={this.state.employeeContractAddress}\r\n        className=\"search-ele\"\r\n        onClick={this.toRoute}\r\n      >\r\n        <div>\r\n          <span>{this.state?.employeedata?.name}</span>\r\n          <span>{this.state?.employeedata?.location}</span>\r\n        </div>\r\n        <small>{this.state?.employeedata?.ethAddress}</small>\r\n        <br />\r\n        <small>{this.state?.employeedata?.description}</small>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SearchEmp);\r\n","import _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Search } from \"semantic-ui-react\";\r\nimport Skills from \"../abis/Skills.json\";\r\nimport SearchEmp from \"./SearchEmp\";\r\nimport \"./Search.css\";\r\n\r\nvar source = [];\r\n\r\nconst initialState = { isLoading: false, results: [], value: \"\" };\r\n\r\nexport default class SearchBar extends Component {\r\n  state = initialState;\r\n\r\n  componentDidMount = async () => {\r\n    const web3 = window.web3;\r\n    const networkId = await web3.eth.net.getId();\r\n    const skillData = await Skills.networks[networkId];\r\n\r\n    if (skillData) {\r\n      const skills = await new web3.eth.Contract(Skills.abi, skillData.address);\r\n      const skillLength = await skills?.methods?.getSkillLength().call();\r\n      const allSkills = await Promise.all(\r\n        Array(parseInt(skillLength))\r\n          .fill()\r\n          .map((ele, index) => skills.methods?.getSkillsByIndex(index).call())\r\n      );\r\n\r\n      allSkills.forEach(async (skillname) => {\r\n        const currSkillLen = await skills.methods\r\n          ?.getTotalEmployeeInSkillByName(skillname)\r\n          .call();\r\n        const allEmp = await Promise.all(\r\n          Array(parseInt(currSkillLen))\r\n            .fill()\r\n            .map((ele, index) =>\r\n              skills.methods?.getEmployeeBySkillName(skillname, index).call()\r\n            )\r\n        );\r\n        allEmp.forEach((emp, index) =>\r\n          source.push({\r\n            title: skillname,\r\n            description: <SearchEmp emp={emp} key={index} />,\r\n          })\r\n        );\r\n      });\r\n    } else {\r\n      toast.error(\"Skill contract does not exist on this network!!\");\r\n    }\r\n  };\r\n\r\n  handleResultSelect = (e, { result }) =>\r\n    this.setState({ value: result.title });\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ isLoading: true, value });\r\n\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.setState(initialState);\r\n\r\n      const re = new RegExp(_.escapeRegExp(this.state.value), \"i\");\r\n      const isMatch = (result) => re.test(result.title);\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        results: _.filter(source, isMatch),\r\n      });\r\n    }, 300);\r\n  };\r\n\r\n  searchOptions = [\r\n    { key: \"1\", text: \"Employee\", value: \"1\" },\r\n    {\r\n      key: \"2\",\r\n      text: \"Skill\",\r\n      value: \"2\",\r\n    },\r\n  ];\r\n  render() {\r\n    const { isLoading, value, results } = this.state;\r\n    return (\r\n      <>\r\n        <Search\r\n          fluid\r\n          aligned=\"center\"\r\n          loading={isLoading}\r\n          onResultSelect={this.handleResultSelect}\r\n          onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n            leading: true,\r\n          })}\r\n          results={results}\r\n          value={value}\r\n          style={{\r\n            minWidth: \"300px\",\r\n          }}\r\n          className=\"searchbar\"\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport QRCode from \"qrcode\";\r\nimport \"./Modals.css\";\r\nimport { Button, Header, Modal } from \"semantic-ui-react\";\r\n\r\nexport default class GenererateQR extends Component {\r\n  state = {\r\n    qr: \"\",\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const web3 = window.web3;\r\n    const accounts = await web3.eth.getAccounts();\r\n    try {\r\n      const res = await QRCode.toDataURL(accounts[0]);\r\n      this.setState({ qr: res });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal size=\"tiny\" className=\"modal-des\" open={this.props.isOpen}>\r\n        <Header\r\n          className=\"modal-heading\"\r\n          icon=\"qrcode\"\r\n          content=\"Scan or Download\"\r\n          as=\"h2\"\r\n        />\r\n        <Modal.Content className=\"modal-content pos-middle-qr\">\r\n          <a href={this.state.qr} download>\r\n            <img src={this.state.qr} alt=\"qr\"></img>\r\n          </a>\r\n        </Modal.Content>\r\n        <Modal.Actions className=\"modal-actions\">\r\n          <Button\r\n            className=\"close-button\"\r\n            type=\"button\"\r\n            color=\"red\"\r\n            icon=\"times\"\r\n            content=\"Close\"\r\n            onClick={() => this.props.closeQRModal()}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Menu, Segment, Image, Label, Icon } from \"semantic-ui-react\";\r\nimport Admin from \"../abis/Admin.json\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport GenererateQR from \"./GenererateQR\";\r\n\r\nclass Navbar extends Component {\r\n  state = { activeItem: \"home\", role: -1, account: \"\", showQr: false };\r\n\r\n  componentDidMount = async () => {\r\n    const web3 = await window.web3;\r\n    console.log(web3);\r\n    const accounts = await web3.eth.getAccounts();\r\n    if (accounts) {\r\n      this.setState({ account: accounts[0] });\r\n    }\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const isEmployee = await admin?.methods?.isEmployee(accounts[0]).call();\r\n      const isOrganizationEndorser = await admin?.methods\r\n        ?.isOrganizationEndorser(accounts[0])\r\n        .call();\r\n      const owner = await admin?.methods?.owner().call();\r\n      var role = -1;\r\n      if (accounts[0] === owner) {\r\n        role = 0;\r\n      } else if (isEmployee) {\r\n        role = 1;\r\n      } else if (isOrganizationEndorser) {\r\n        role = 2;\r\n      }\r\n      this.setState({ role });\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n  };\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n  closeQRModal = () => {\r\n    this.setState({ showQr: false });\r\n  };\r\n\r\n  render() {\r\n    const { activeItem } = this.state;\r\n    const roles = [\"Admin\", \"Candidate\", \"Organization\"];\r\n\r\n    return (\r\n      <>\r\n        <GenererateQR\r\n          isOpen={this.state.showQr}\r\n          closeQRModal={this.closeQRModal}\r\n        />\r\n        <Segment\r\n          inverted\r\n          style={{\r\n            borderRadius: \"0\",\r\n            background: \"#1e2022ea\",\r\n\r\n            boxShadow: \"0 0 5px 0px white\",\r\n          }}\r\n        >\r\n          <Menu\r\n            style={{ marginLeft: \"80px\", border: \"none\" }}\r\n            inverted\r\n            pointing\r\n            secondary\r\n          >\r\n            <Menu.Item\r\n              as={Link}\r\n              to=\"/\"\r\n              style={{ marginRight: \"25px\", padding: \"0px\" }}\r\n            >\r\n              <div\r\n                style={{\r\n                  \r\n                  display: \"grid\",\r\n                  justifyItems: \"center\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  height: \"50px\",\r\n                  width: \"150px\",\r\n                  borderRadius: \"100%\",\r\n                  \r\n                  // padding: \"10px\",\r\n                  marginBottom: \"-5px\",\r\n                  \r\n                }}\r\n              >\r\n                <Image src=\"https://companieslogo.com/img/orig/VRTU_BIG-6de44a1b.png?t=1603138555\" />\r\n              </div>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              style={{ marginRight: \"25px\", padding: \"0px\" }}\r\n              position=\"left\"\r\n            >\r\n              <SearchBar />\r\n            </Menu.Item>\r\n            {this.state.role === 0 && (\r\n              <>\r\n                <Menu.Item\r\n                  as={Link}\r\n                  to=\"/\"\r\n                  name=\"Candidates\"\r\n                  active={activeItem === \"Employees\"}\r\n                  onClick={this.handleItemClick}\r\n                />\r\n                <Menu.Item\r\n                  as={Link}\r\n                  to=\"/all-organization-endorser\"\r\n                  name=\"Organization\"\r\n                  active={activeItem === \"Organization Endorsers\"}\r\n                  onClick={this.handleItemClick}\r\n                />\r\n                <Menu.Item\r\n                  as={Link}\r\n                  to=\"/create-user\"\r\n                  name=\"Create User\"\r\n                  active={activeItem === \"Create User\"}\r\n                  onClick={this.handleItemClick}\r\n                />\r\n                <Menu.Item\r\n                  as={Link}\r\n                  to=\"/notifications\"\r\n                  name=\"Ping\"\r\n                  active={activeItem === \"Notifications\"}\r\n                  onClick={this.handleItemClick}\r\n                />\r\n              </>\r\n            )}\r\n            {this.state.role === 1 && (\r\n              <>\r\n                <Menu.Item\r\n                  as={Link}\r\n                  to=\"/\"\r\n                  name=\"Profile\"\r\n                  active={activeItem === \"Profile\"}\r\n                  onClick={this.handleItemClick}\r\n                />\r\n                <Menu.Item\r\n                  as={Link}\r\n                  to=\"/update-profile\"\r\n                  name=\"Update Profile\"\r\n                  active={activeItem === \"Update Profile\"}\r\n                  onClick={this.handleItemClick}\r\n                />\r\n                <Menu.Item\r\n                  as={Link}\r\n                  to=\"/notifications\"\r\n                  name=\"Ping\"\r\n                  active={activeItem === \"Notifications\"}\r\n                  onClick={this.handleItemClick}\r\n                />\r\n              </>\r\n            )}\r\n\r\n            {this.state.role === 2 && (\r\n              <>\r\n                <Menu.Item\r\n                  as={Link}\r\n                  to=\"/\"\r\n                  name=\"Info Page\"\r\n                  active={activeItem === \"Info Page\"}\r\n                  onClick={this.handleItemClick}\r\n                />\r\n                <Menu.Item\r\n                  as={Link}\r\n                  to=\"/endorse-skill\"\r\n                  name=\"Endorse Skill\"\r\n                  active={activeItem === \"Endorse Skill\"}\r\n                  onClick={this.handleItemClick}\r\n                />\r\n                <Menu.Item\r\n                  as={Link}\r\n                  to=\"/endorse-section\"\r\n                  name=\"Endorse Section\"\r\n                  active={activeItem === \"Endorse Section\"}\r\n                  onClick={this.handleItemClick}\r\n                />\r\n                <Menu.Item\r\n                  as={Link}\r\n                  to=\"/notifications\"\r\n                  name=\"Ping\"\r\n                  active={activeItem === \"Notifications\"}\r\n                  onClick={this.handleItemClick}\r\n                />\r\n              </>\r\n            )}\r\n\r\n            {this.state.role === -1 && (\r\n              <>\r\n                <Menu.Item\r\n                  as={Link}\r\n                  to=\"/\"\r\n                  name=\"Request Admin For Role\"\r\n                  active={activeItem === \"Request Admin For Role\"}\r\n                  onClick={this.handleItemClick}\r\n                />\r\n                <Menu.Item\r\n                  as={Link}\r\n                  to=\"/notifications\"\r\n                  name=\"Ping\"\r\n                  active={activeItem === \"Notifications\"}\r\n                  onClick={this.handleItemClick}\r\n                />\r\n              </>\r\n            )}\r\n\r\n            <Menu.Item position=\"right\">\r\n              <Label style={{ color: \"black\", background: \"white\" }}>\r\n                {this.state.role === -1 ? \"No Role\" : roles[this.state.role]}\r\n              </Label>\r\n              &nbsp;&nbsp;&nbsp;\r\n              <div style={{ color: \"lightgray\" }}>\r\n                <em>\r\n                  <small>{this.state.account}</small>\r\n                </em>\r\n                &nbsp;&nbsp;&nbsp;\r\n                <Icon\r\n                  name=\"qrcode\"\r\n                  size=\"large\"\r\n                  style={{ color: \"white\", cursor: \"pointer\" }}\r\n                  onClick={() => this.setState({ showQr: true })}\r\n                />\r\n              </div>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Segment>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Navbar);","import React, { Component } from \"react\";\r\nimport { Card, Grid } from \"semantic-ui-react\";\r\nimport Employee from \"../../abis/Employee.json\";\r\nimport LineChart from \"../../components/LineChart\";\r\nimport SkillCard from \"../../components/SkillCard\";\r\nimport \"./Employee.css\";\r\nimport { buildStyles, CircularProgressbar } from \"react-circular-progressbar\";\r\nimport LoadComp from \"../../components/LoadComp\";\r\nimport CodeforcesGraph from \"../../components/CodeforcesGraph\";\r\n\r\nexport default class GetEmployee extends Component {\r\n  state = {\r\n    employeedata: {},\r\n    overallEndorsement: [],\r\n    skills: [],\r\n    certifications: [],\r\n    workExps: [],\r\n    educations: [],\r\n    colour: [\"#b6e498\", \"#61dafb\", \"#764abc\", \"#83cd29\", \"#00d1b2\"],\r\n    readmore: false,\r\n    loadcomp: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({ loadcomp: true });\r\n    const employee_address = this.props?.match?.params?.employee_address;\r\n    const web3 = window.web3;\r\n    const EmployeeContract = await new web3.eth.Contract(\r\n      Employee.abi,\r\n      employee_address\r\n    );\r\n    this.getSkills(EmployeeContract);\r\n    this.getCertifications(EmployeeContract);\r\n    this.getWorkExp(EmployeeContract);\r\n    this.getEducation(EmployeeContract);\r\n    const employeedata = await EmployeeContract.methods\r\n      .getEmployeeInfo()\r\n      .call();\r\n    const newEmployedata = {\r\n      ethAddress: employeedata[0],\r\n      name: employeedata[1],\r\n      location: employeedata[2],\r\n      description: employeedata[3],\r\n      overallEndorsement: employeedata[4],\r\n      endorsecount: employeedata[5],\r\n    };\r\n    const endorseCount = newEmployedata.endorsecount;\r\n    const overallEndorsement = await Promise.all(\r\n      Array(parseInt(endorseCount))\r\n        .fill()\r\n        .map((ele, index) =>\r\n          EmployeeContract?.methods?.overallEndorsement(index).call()\r\n        )\r\n    );\r\n    this.setState({\r\n      employeedata: newEmployedata,\r\n      overallEndorsement,\r\n      loadcomp: false,\r\n    });\r\n  };\r\n\r\n  getSkills = async (EmployeeContract) => {\r\n    const skillCount = await EmployeeContract?.methods?.getSkillCount().call();\r\n    const skills = await Promise.all(\r\n      Array(parseInt(skillCount))\r\n        .fill()\r\n        .map((ele, index) =>\r\n          EmployeeContract?.methods?.getSkillByIndex(index).call()\r\n        )\r\n    );\r\n\r\n    var newskills = [];\r\n    skills.forEach((certi) => {\r\n      newskills.push({\r\n        name: certi[0],\r\n        overall_percentage: certi[1],\r\n        experience: certi[2],\r\n        endorsed: certi[3],\r\n        endorser_address: certi[4],\r\n        review: certi[5],\r\n        visible: certi[6],\r\n      });\r\n      return;\r\n    });\r\n\r\n    this.setState({ skills: newskills });\r\n  };\r\n\r\n  getCertifications = async (EmployeeContract) => {\r\n    const certiCount = await EmployeeContract?.methods\r\n      ?.getCertificationCount()\r\n      .call();\r\n    const certifications = await Promise.all(\r\n      Array(parseInt(certiCount))\r\n        .fill()\r\n        .map((ele, index) =>\r\n          EmployeeContract?.methods?.getCertificationByIndex(index).call()\r\n        )\r\n    );\r\n    var newcertifications = [];\r\n    certifications.forEach((certi) => {\r\n      newcertifications.push({\r\n        name: certi[0],\r\n        organization: certi[1],\r\n        score: certi[2],\r\n        endorsed: certi[3],\r\n        visible: certi[4],\r\n      });\r\n      return;\r\n    });\r\n    this.setState({ certifications: newcertifications });\r\n  };\r\n\r\n  getWorkExp = async (EmployeeContract) => {\r\n    const workExpCount = await EmployeeContract?.methods\r\n      ?.getWorkExpCount()\r\n      .call();\r\n    const workExps = await Promise.all(\r\n      Array(parseInt(workExpCount))\r\n        .fill()\r\n        .map((ele, index) =>\r\n          EmployeeContract?.methods?.getWorkExpByIndex(index).call()\r\n        )\r\n    );\r\n\r\n    var newworkExps = [];\r\n    workExps.forEach((work) => {\r\n      newworkExps.push({\r\n        role: work[0],\r\n        organization: work[1],\r\n        startdate: work[2],\r\n        enddate: work[3],\r\n        endorsed: work[4],\r\n        description: work[5],\r\n        visible: work[6],\r\n      });\r\n      return;\r\n    });\r\n\r\n    this.setState({ workExps: newworkExps });\r\n  };\r\n\r\n  getEducation = async (EmployeeContract) => {\r\n    const educationCount = await EmployeeContract?.methods\r\n      ?.getEducationCount()\r\n      .call();\r\n    const educations = await Promise.all(\r\n      Array(parseInt(educationCount))\r\n        .fill()\r\n        .map((ele, index) =>\r\n          EmployeeContract?.methods?.getEducationByIndex(index).call()\r\n        )\r\n    );\r\n    var neweducation = [];\r\n    educations.forEach((certi) => {\r\n      neweducation.push({\r\n        institute: certi[0],\r\n        startdate: certi[1],\r\n        enddate: certi[2],\r\n        endorsed: certi[3],\r\n        description: certi[4],\r\n      });\r\n      return;\r\n    });\r\n    this.setState({ educations: neweducation });\r\n  };\r\n\r\n  render() {\r\n    return this.state.loadcomp ? (\r\n      <LoadComp />\r\n    ) : (\r\n      <div>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={6}>\r\n              <Card className=\"personal-info\">\r\n                <Card.Content>\r\n                  <Card.Header>\r\n                    {this.state.employeedata?.name}\r\n                    <small\r\n                      style={{ wordBreak: \"break-word\", color: \"#c5c6c7\" }}\r\n                    >\r\n                      {this.state.employeedata?.ethAddress}\r\n                    </small>\r\n                  </Card.Header>\r\n                  <br />\r\n                  <div>\r\n                    <p>\r\n                      <em>Location: </em>\r\n                      <span style={{ color: \"#c5c6c7\" }}>\r\n                        {this.state.employeedata?.location}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                    <p>\r\n                      <em>Overall Endorsement Rating:</em>\r\n                    </p>\r\n                    <LineChart\r\n                      overallEndorsement={this.state.overallEndorsement}\r\n                    />\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n              <Card className=\"employee-des\">\r\n                <Card.Content>\r\n                  <Card.Header>About:</Card.Header>\r\n                  <div>\r\n                    <p style={{ color: \"#c5c6c7\" }}>\r\n                      {this.state.employeedata?.description}\r\n                    </p>\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                    <Card.Header\r\n                      style={{ fontSize: \"19px\", fontWeight: \"600\" }}\r\n                    >\r\n                      Education:\r\n                    </Card.Header>\r\n                    <br />\r\n                    <div className=\"education\">\r\n                      {this.state.educations?.map((education, index) => (\r\n                        <div className=\"education-design\" key={index}>\r\n                          <div\r\n                            style={{ paddingRight: \"50px\", color: \"#c5c6c7\" }}\r\n                          >\r\n                            <p>{education.description}</p>\r\n                            <small\r\n                              style={{\r\n                                wordBreak: \"break-word\",\r\n                                fontSize: \"10px\",\r\n                              }}\r\n                            >\r\n                              {education.institute}\r\n                            </small>\r\n                          </div>\r\n                          <div>\r\n                            <small style={{ color: \"#c5c6c7\" }}>\r\n                              <em>\r\n                                {education.startdate} - {education.enddate}\r\n                              </em>\r\n                            </small>\r\n                            <p\r\n                              style={{\r\n                                color: education.endorsed\r\n                                  ? \"#00d1b2\"\r\n                                  : \"yellow\",\r\n                                opacity: \"0.7\",\r\n                              }}\r\n                            >\r\n                              {education.endorsed\r\n                                ? \"Endorsed\"\r\n                                : \"Not Yet Endorsed\"}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n              <Card className=\"employee-des\">\r\n                <Card.Content>\r\n                  <Card.Header>Competetive Platform Ratings</Card.Header>\r\n                  <CodeforcesGraph />\r\n                </Card.Content>\r\n              </Card>\r\n            </Grid.Column>\r\n            <Grid.Column width={10}>\r\n              <Card className=\"employee-des\">\r\n                <Card.Content>\r\n                  <Card.Header>Certifications</Card.Header>\r\n                  <br />\r\n                  <div>\r\n                    {this.state.certifications?.map(\r\n                      (certi, index) =>\r\n                        certi.visible && (\r\n                          <div key={index} className=\"certification-container\">\r\n                            <div style={{ color: \"#c5c6c7\" }}>\r\n                              <p>{certi.name}</p>\r\n                              <small style={{ wordBreak: \"break-word\" }}>\r\n                                {certi.organization}\r\n                              </small>\r\n                              <p\r\n                                style={{\r\n                                  color: certi.endorsed ? \"#00d1b2\" : \"yellow\",\r\n                                  opacity: \"0.7\",\r\n                                }}\r\n                              >\r\n                                {certi.endorsed\r\n                                  ? \"Endorsed\"\r\n                                  : \"Not Yet Endorsed\"}\r\n                              </p>\r\n                            </div>\r\n                            <div>\r\n                              <div style={{ width: \"100px\" }}>\r\n                                <CircularProgressbar\r\n                                  value={certi.score}\r\n                                  text={`Score - ${certi.score}%`}\r\n                                  strokeWidth=\"5\"\r\n                                  styles={buildStyles({\r\n                                    strokeLinecap: \"round\",\r\n                                    textSize: \"12px\",\r\n                                    pathTransitionDuration: 1,\r\n                                    pathColor: `rgba(255,255,255, ${\r\n                                      certi.score / 100\r\n                                    })`,\r\n                                    textColor: \"#c5c6c7\",\r\n                                    trailColor: \"#393b3fa6\",\r\n                                    backgroundColor: \"#c5c6c7\",\r\n                                  })}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                    )}\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n              <Card className=\"employee-des\">\r\n                <Card.Content>\r\n                  <Card.Header>Work Experiences</Card.Header>\r\n                  <br />\r\n                  <div className=\"education\">\r\n                    {this.state.workExps?.map(\r\n                      (workExp, index) =>\r\n                        workExp.visible && (\r\n                          <div className=\"education-design\" key={index}>\r\n                            <div style={{ color: \"#c5c6c7\" }}>\r\n                              <p>{workExp.role}</p>\r\n                              <small style={{ wordBreak: \"break-word\" }}>\r\n                                {workExp.organization}\r\n                              </small>\r\n                            </div>\r\n                            <div>\r\n                              <small>\r\n                                <em>\r\n                                  {workExp.startdate} - {workExp.enddate}\r\n                                </em>\r\n                              </small>\r\n                              <p\r\n                                style={{\r\n                                  color: workExp.endorsed\r\n                                    ? \"#00d1b2\"\r\n                                    : \"yellow\",\r\n                                  opacity: \"0.7\",\r\n                                }}\r\n                              >\r\n                                {workExp.endorsed\r\n                                  ? \"Endorsed\"\r\n                                  : \"Not Yet Endorsed\"}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                    )}\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n              <Card className=\"employee-des\">\r\n                <Card.Content>\r\n                  <Card.Header>Skills</Card.Header>\r\n                  <br />\r\n                  <div className=\"skill-height-container\">\r\n                    {this.state.skills?.map((skill, index) =>\r\n                      skill.visible ? (\r\n                        <div>\r\n                          <SkillCard skill={skill} key={index} />\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )\r\n                    )}\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Organization from \"../../abis/OrganizationEndorser.json\";\r\nimport Admin from \"../../abis/Admin.json\";\r\nimport { toast } from \"react-toastify\";\r\nimport OrgEndCard from \"../../components/OrgEndCard\";\r\nimport EmployeeCard from \"../../components/EmployeeCard\";\r\nimport \"./GetOrg.css\";\r\nimport LoadComp from \"../../components/LoadComp\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass GetOrg extends Component {\r\n  state = {\r\n    orgcontractAddress: \"\",\r\n    employees: [],\r\n    employeemodal: false,\r\n    loadcomp: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({ loadcomp: true });\r\n    await this.getEmployees();\r\n    this.setState({ loadcomp: false });\r\n  };\r\n\r\n  getEmployees = async () => {\r\n    const web3 = window.web3;\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    const orgAddress = this.props.match.params.orgAddress;\r\n    if (!orgAddress) {\r\n      this.props.history.push(\"/\");\r\n      return;\r\n    }\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const orgContractAddress = await admin?.methods\r\n        ?.getOrganizationContractByAddress(orgAddress)\r\n        .call();\r\n      const orgContract = await new web3.eth.Contract(\r\n        Organization.abi,\r\n        orgContractAddress\r\n      );\r\n\r\n      const employeeCount = await orgContract?.methods?.totalEmployees().call();\r\n\r\n      const employees = await Promise.all(\r\n        Array(parseInt(employeeCount))\r\n          .fill()\r\n          .map(async (ele, index) => {\r\n            const employee = await orgContract?.methods\r\n              ?.getEmployeeByIndex(index)\r\n              .call();\r\n            return admin.methods.getEmployeeContractByAddress(employee).call();\r\n          })\r\n      );\r\n\r\n      this.setState({ orgContractAddress, employees });\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.state.loadcomp ? (\r\n      <LoadComp />\r\n    ) : (\r\n      <div>\r\n        {this.state.orgContractAddress && (\r\n          <OrgEndCard OrgEndContractAddress={this.state.orgContractAddress} />\r\n        )}\r\n        <br />\r\n        <div>\r\n          <div\r\n            style={{ width: \"68%\", marginLeft: \"auto\", marginRight: \"auto\" }}\r\n          >\r\n            <h2 className=\"org-card-heading\">Employees in the organization</h2>\r\n          </div>\r\n          <br />\r\n          {this.state.employees?.map((employee, index) => (\r\n            <EmployeeCard key={index} employeeContractAddress={employee} />\r\n          ))}\r\n        </div>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(GetOrg);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button, Card, Dropdown, Form, Message } from \"semantic-ui-react\";\r\nimport \"./NoRole.css\";\r\nimport { messageAdmin } from \"../../firebase/api.js\";\r\n\r\nclass NoRole extends Component {\r\n  state = {\r\n    name: \"\",\r\n    location: \"\",\r\n    description: \"\",\r\n    role: 0,\r\n    loading: false,\r\n    errorMessage: \"\",\r\n    message: \"\",\r\n  };\r\n\r\n  roleOptions = [\r\n    {\r\n      key: \"0\",\r\n      text: \"Guest\",\r\n      value: \"0\",\r\n    },\r\n    {\r\n      key: \"1\",\r\n      text: \"Candidate\",\r\n      value: \"1\",\r\n    },\r\n    {\r\n      key: \"2\",\r\n      text: \"Organization\",\r\n      value: \"2\",\r\n    },\r\n  ];\r\n\r\n  handleDropdownSelect = (e, data) => {\r\n    this.setState({ role: data.value });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ loading: true });\r\n    const info = {\r\n      name: this.state.name,\r\n      description: this.state.description,\r\n      role: this.state.role,\r\n      location: this.state.location,\r\n    };\r\n    await messageAdmin(info, this.state.message);\r\n    this.setState({\r\n      name: \"\",\r\n      description: \"\",\r\n      role: \"0\",\r\n      location: \"\",\r\n      message: \"\",\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"norole\">\r\n        <Card className=\"card-style\">\r\n          <Card.Content>\r\n            <Card.Header centered>\r\n              <h2 className=\"card-heading\">Request for Access</h2>\r\n            </Card.Header>\r\n            <hr className=\"horizontal-line\"></hr>\r\n            <br></br>\r\n            <Form error={!!this.state.errorMessage}>\r\n              <Form.Field className=\"form-inputs-admin\">\r\n                <input\r\n                  id=\"name\"\r\n                  placeholder=\"Your Name\"\r\n                  autoComplete=\"off\"\r\n                  autoCorrect=\"off\"\r\n                  value={this.state.name}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n              <br />\r\n              <Form.Field className=\"form-inputs-admin\">\r\n                <input\r\n                  id=\"location\"\r\n                  placeholder=\"Your Location\"\r\n                  autoComplete=\"off\"\r\n                  autoCorrect=\"off\"\r\n                  value={this.state.location}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n              <br />\r\n              <Form.Field className=\"form-inputs-admin\">\r\n                <input\r\n                  id=\"description\"\r\n                  placeholder=\"Description\"\r\n                  autoComplete=\"off\"\r\n                  autoCorrect=\"off\"\r\n                  value={this.state.description}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n              <br />\r\n              <Form.Field className=\"form-inputs-admin\">\r\n                <Dropdown\r\n                  placeholder=\"Role\"\r\n                  fluid\r\n                  selection\r\n                  options={this.roleOptions}\r\n                  onChange={this.handleDropdownSelect}\r\n                />\r\n              </Form.Field>\r\n              <br />\r\n              <Form.Field className=\"form-inputs-admin\">\r\n                <textarea\r\n                  id=\"message\"\r\n                  rows=\"4\"\r\n                  placeholder=\"Message\"\r\n                  autoComplete=\"off\"\r\n                  autoCorrect=\"off\"\r\n                  value={this.state.message}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n              <br />\r\n              <Message\r\n                error\r\n                header=\"Oops!!\"\r\n                content={this.state.errorMessage}\r\n              />\r\n              <br />\r\n              <div className=\"button-holder\">\r\n                <Button\r\n                  className=\"button-css-admin\"\r\n                  type=\"submit\"\r\n                  onClick={this.handleSubmit}\r\n                  loading={this.state.loading}\r\n                >\r\n                  Send\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Card.Content>\r\n        </Card>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(NoRole);\r\n","import React, { Component } from \"react\";\r\nimport { Button, Header, Modal, Table } from \"semantic-ui-react\";\r\nimport \"./Modals.css\";\r\nimport Admin from \"../abis/Admin.json\";\r\nimport Employee from \"../abis/Employee.json\";\r\nimport { toast } from \"react-toastify\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass GetInfoModal extends Component {\r\n  state = {\r\n    loading: false,\r\n  };\r\n\r\n  createUser = async (e) => {\r\n    e.preventDefault();\r\n    const { ethAddress, name, location, role, description } = this.props.info;\r\n    if (!name || !location || !description || !role || !ethAddress) {\r\n      toast.error(\"Please fill all the fields!!\");\r\n      return;\r\n    }\r\n    this.setState({ loading: true, errorMessage: \"\" });\r\n    const web3 = window.web3;\r\n    const accounts = await web3.eth.getAccounts();\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n\r\n      const owner = await admin.methods.owner().call();\r\n      if (owner !== accounts[0]) {\r\n        this.setState({\r\n          errorMessage: \"Sorry! You are not the Admin!!\",\r\n          loading: false,\r\n        });\r\n        return;\r\n      }\r\n      try {\r\n        await admin.methods\r\n          .registerUser(ethAddress, name, location, description, role)\r\n          .send({ from: accounts[0] });\r\n        toast.success(\"New user registered succressfully!!!!\");\r\n        this.props.history.push(\r\n          `${role === \"1\" ? \"/\" : \"/all-organization-endorser\"}`\r\n        );\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  endorseEmployee = async (info) => {\r\n    const { req } = info;\r\n    var section = -1;\r\n    if (req === \"Education Endorsement Request\") section = 1;\r\n    else if (req === \"Certification Endorsement Request\") section = 2;\r\n    else if (req === \"Work Experience Endorsement Request\") section = 3;\r\n    this.setState({ loading: true, errorMessage: \"\" });\r\n    const web3 = window.web3;\r\n    const accounts = await web3.eth.getAccounts();\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      try {\r\n        const employeeContractAddress = await admin.methods\r\n          .getEmployeeContractByAddress(this.props.info?.ethAddress)\r\n          .call();\r\n        const EmployeeContract = await new web3.eth.Contract(\r\n          Employee.abi,\r\n          employeeContractAddress\r\n        );\r\n        if (section === 1) {\r\n          await EmployeeContract.methods\r\n            ?.endorseEducation()\r\n            .send({ from: accounts[0] });\r\n        } else if (section === 2) {\r\n          await EmployeeContract?.methods\r\n            ?.endorseCertification(info.name)\r\n            .send({ from: accounts[0] });\r\n        } else if (section === 3) {\r\n          await EmployeeContract?.methods\r\n            ?.endorseWorkExp()\r\n            .send({ from: accounts[0] });\r\n        }\r\n        toast.success(\"New user registered succressfully!!!!\");\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      this.setState({ loading: false });\r\n    }\r\n    this.props.closeInfoModal();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isEndorsementReq ? (\r\n          <Modal open={this.props.isOpen} size=\"tiny\" className=\"modal-des\">\r\n            <Header\r\n              className=\"modal-heading\"\r\n              icon=\"pencil\"\r\n              content={this.props.info?.req}\r\n              as=\"h2\"\r\n            />\r\n            <Modal.Content className=\"modal-content\">\r\n              <Table className=\"design-info-table\">\r\n                <Table.Row>\r\n                  <Table.HeaderCell>Fields</Table.HeaderCell>\r\n                  <Table.HeaderCell>Values Provided</Table.HeaderCell>\r\n                </Table.Row>\r\n                <hr style={{ border: \"none\", borderTop: \"1px solid white\" }} />\r\n                {this.props.info?.req === \"Education Endorsement Request\" && (\r\n                  <Table.Body>\r\n                    <Table.Row>\r\n                      <Table.Cell>\r\n                        <p style={{ fontWeight: \"700\" }}>Institute</p>\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        <p>{this.props.info?.institute}</p>\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                      <Table.Cell>\r\n                        <p style={{ fontWeight: \"700\" }}>Description</p>\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        <p>{this.props.info?.description}</p>\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                      <Table.Cell>\r\n                        <p style={{ fontWeight: \"700\" }}>Start date</p>\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        <p>{this.props.info?.startdate}</p>\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                      <Table.Cell>\r\n                        <p style={{ fontWeight: \"700\" }}>End date</p>\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        <p>{this.props.info?.enddate}</p>\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                  </Table.Body>\r\n                )}\r\n                {this.props.info?.req ===\r\n                  \"Certification Endorsement Request\" && (\r\n                  <Table.Body>\r\n                    <Table.Row>\r\n                      <Table.Cell>\r\n                        <p style={{ fontWeight: \"700\" }}>Name</p>\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        <p>{this.props.info?.name}</p>\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                      <Table.Cell>\r\n                        <p style={{ fontWeight: \"700\" }}>Organization</p>\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        <p>{this.props.info?.organization}</p>\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                      <Table.Cell>\r\n                        <p style={{ fontWeight: \"700\" }}>Score</p>\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        <p>{this.props.info?.score}</p>\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                  </Table.Body>\r\n                )}\r\n                {this.props.info?.req ===\r\n                  \"Work Experience Endorsement Request\" && (\r\n                  <Table.Body>\r\n                    <Table.Row>\r\n                      <Table.Cell>\r\n                        <p style={{ fontWeight: \"700\" }}>Role</p>\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        <p>{this.props.info?.role}</p>\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                      <Table.Cell>\r\n                        <p style={{ fontWeight: \"700\" }}>Organization</p>\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        <p>{this.props.info?.organization}</p>\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                      <Table.Cell>\r\n                        <p style={{ fontWeight: \"700\" }}>Description</p>\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        <p>{this.props.info?.description}</p>\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                      <Table.Cell>\r\n                        <p style={{ fontWeight: \"700\" }}>Start Date</p>\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        <p>{this.props.info?.startdate}</p>\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                      <Table.Cell>\r\n                        <p style={{ fontWeight: \"700\" }}>Enddate</p>\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        <p>{this.props.info?.enddate}</p>\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                  </Table.Body>\r\n                )}\r\n              </Table>\r\n            </Modal.Content>\r\n            <Modal.Actions className=\"modal-actions\">\r\n              <Button\r\n                className=\"close-button\"\r\n                type=\"button\"\r\n                color=\"red\"\r\n                icon=\"times\"\r\n                content=\"Close\"\r\n                onClick={() => this.props.closeInfoModal()}\r\n              />\r\n              {this.props.org && (\r\n                <Button\r\n                  className=\"button-css\"\r\n                  type=\"submit\"\r\n                  color=\"green\"\r\n                  icon=\"save\"\r\n                  content=\"Endorse\"\r\n                  loading={this.state.loading}\r\n                  onClick={() => this.endorseEmployee(this.props.info)}\r\n                />\r\n              )}\r\n            </Modal.Actions>\r\n          </Modal>\r\n        ) : (\r\n          <Modal open={this.props.isOpen} size=\"tiny\" className=\"modal-des\">\r\n            <Header\r\n              className=\"modal-heading\"\r\n              icon=\"pencil\"\r\n              content=\"Info Provided to Admins\"\r\n              as=\"h2\"\r\n            />\r\n            <Modal.Content className=\"modal-content\">\r\n              <Table className=\"design-info-table\">\r\n                <Table.Row>\r\n                  <Table.HeaderCell>Fields</Table.HeaderCell>\r\n                  <Table.HeaderCell>Values Provided</Table.HeaderCell>\r\n                </Table.Row>\r\n                <hr style={{ border: \"none\", borderTop: \"1px solid white\" }} />\r\n                <Table.Body>\r\n                  <Table.Row>\r\n                    <Table.Cell>\r\n                      <p style={{ fontWeight: \"700\" }}>Name</p>\r\n                    </Table.Cell>\r\n                    <Table.Cell>\r\n                      <p>{this.props.info?.name}</p>\r\n                    </Table.Cell>\r\n                  </Table.Row>\r\n                  <Table.Row>\r\n                    <Table.Cell>\r\n                      <p style={{ fontWeight: \"700\" }}>Eth Address</p>\r\n                    </Table.Cell>\r\n                    <Table.Cell>\r\n                      <p>{this.props.info?.ethAddress}</p>\r\n                    </Table.Cell>\r\n                  </Table.Row>\r\n                  <Table.Row>\r\n                    <Table.Cell>\r\n                      <p style={{ fontWeight: \"700\" }}>Location</p>\r\n                    </Table.Cell>\r\n                    <Table.Cell>\r\n                      <p>{this.props.info?.location}</p>\r\n                    </Table.Cell>\r\n                  </Table.Row>\r\n                  <Table.Row>\r\n                    <Table.Cell>\r\n                      <p style={{ fontWeight: \"700\" }}>Description</p>\r\n                    </Table.Cell>\r\n                    <Table.Cell>\r\n                      <p>{this.props.info?.description}</p>\r\n                    </Table.Cell>\r\n                  </Table.Row>\r\n                  <Table.Row>\r\n                    <Table.Cell>\r\n                      <p style={{ fontWeight: \"700\" }}>Role Requested</p>\r\n                    </Table.Cell>\r\n                    <Table.Cell>\r\n                      <p>\r\n                        {this.props.info?.role === \"1\"\r\n                          ? \"Employee\"\r\n                          : \"Organization Endorser\"}\r\n                      </p>\r\n                    </Table.Cell>\r\n                  </Table.Row>\r\n                </Table.Body>\r\n              </Table>\r\n            </Modal.Content>\r\n            <Modal.Actions className=\"modal-actions\">\r\n              <Button\r\n                className=\"close-button\"\r\n                type=\"button\"\r\n                color=\"red\"\r\n                icon=\"times\"\r\n                content=\"Close\"\r\n                onClick={() => this.props.closeInfoModal()}\r\n              />\r\n              {this.props.admin && (\r\n                <Button\r\n                  className=\"button-css\"\r\n                  type=\"submit\"\r\n                  color=\"green\"\r\n                  icon=\"save\"\r\n                  content=\"Register User\"\r\n                  loading={this.state.loading}\r\n                  onClick={this.createUser}\r\n                />\r\n              )}\r\n            </Modal.Actions>\r\n          </Modal>\r\n        )}{\" \"}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(GetInfoModal);\r\n","import React, { Component } from \"react\";\r\nimport { Image, Input, Loader } from \"semantic-ui-react\";\r\nimport \"./ChatBody.css\";\r\nimport { db } from \"../firebase/firebase\";\r\nimport GetInfoModal from \"./GetInfoModal\";\r\n\r\nconst senderDesign = {\r\n  position: \"relative\",\r\n  fontSize: \"15px\",\r\n  padding: \"10px\",\r\n  backgroundColor: \"#c5c6c7\",\r\n  color: \"black\",\r\n  borderRadius: \"10px\",\r\n  width: \"fit-content\",\r\n  marginBottom: \"23px\",\r\n  maxWidth: \"60%\",\r\n  boxShadow: \"inset 0 0 3px black\",\r\n};\r\n\r\nconst receiverDesign = {\r\n  position: \"relative\",\r\n  fontSize: \"15px\",\r\n  padding: \"10px\",\r\n  backgroundColor: \"rgba(0, 128, 128,.4)\",\r\n  borderRadius: \"10px\",\r\n  width: \"fit-content\",\r\n  marginBottom: \"23px\",\r\n  marginLeft: \"auto\",\r\n  color: \"white\",\r\n  maxWidth: \"60%\",\r\n  boxShadow: \"inset 0 0 3px lightgray\",\r\n};\r\n\r\nexport default class ChatBody extends Component {\r\n  state = {\r\n    chats: [],\r\n    loading: false,\r\n    message: \"\",\r\n    account: \"\",\r\n    infomaodal: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({ loading: true });\r\n    const web3 = window.web3;\r\n    const accounts = await web3.eth.getAccounts();\r\n    this.setState({ account: accounts[0] });\r\n    var key;\r\n    const ethAddress = this.props.ethAddress;\r\n    if (ethAddress < accounts[0]) {\r\n      key = ethAddress + \"#\" + accounts[0];\r\n    } else {\r\n      key = accounts[0] + \"#\" + ethAddress;\r\n    }\r\n    await db\r\n      .collection(\"chats\")\r\n      .doc(key)\r\n      .collection(\"chatmessages\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) =>\r\n        this.setState({ chats: snapshot.docs.map((doc) => doc.data()) })\r\n      );\r\n    console.log(this.state.chats);\r\n    this.setState({ loading: false });\r\n  };\r\n\r\n  sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    const account = this.state.account;\r\n    const ethAddress = this.props.ethAddress;\r\n    var key;\r\n    if (ethAddress < account) {\r\n      key = ethAddress + \"#\" + account;\r\n    } else {\r\n      key = account + \"#\" + ethAddress;\r\n    }\r\n    await db.collection(\"chats\").doc(key).collection(\"chatmessages\").add({\r\n      message: this.state.message,\r\n      sender: account,\r\n      receiver: ethAddress,\r\n      timeStamp: new Date(),\r\n    });\r\n    this.setState({ message: \"\" });\r\n  };\r\n\r\n  handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") this.sendMessage(e);\r\n  };\r\n\r\n  closeInfoModal = async () => {\r\n    this.setState({ infomaodal: false });\r\n  };\r\n\r\n  render() {\r\n    return this.state.loading ? (\r\n      <Loader active />\r\n    ) : (\r\n      <>\r\n        <GetInfoModal\r\n          isOpen={this.state.infomaodal}\r\n          closeInfoModal={this.closeInfoModal}\r\n          info={\r\n            this.state.chats && this.state.chats.length >= 1\r\n              ? this.state.chats[this.state.chats.length - 1].info\r\n              : {}\r\n          }\r\n          admin={this.props.admin}\r\n          isEndorsementReq={this.props.isEndorsementReq}\r\n          org={this.props.org}\r\n        />\r\n        <div style={{ marginTop: \"7px\" }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => this.setState({ infomaodal: true })}\r\n          >\r\n            <div>\r\n              <Image\r\n                src={this.props.avatar}\r\n                avatar\r\n                style={{ fontSize: \"25px\" }}\r\n              />\r\n              <span\r\n                style={{\r\n                  matginLeft: \"10px\",\r\n                  fontSize: \"20px\",\r\n                  fontWeight: \"600\",\r\n                  color:\"white\",\r\n                }}\r\n              >\r\n                {this.props.name}\r\n              </span>\r\n            </div>\r\n            <small\r\n              style={{\r\n                fontWeight: \"600\",\r\n                wordBreak: \"break-word\",\r\n                fontSize: \"0.7rem\",\r\n                marginTop: \"30px\",\r\n                color:\"white\",\r\n              }}\r\n            >\r\n              {this.props.ethAddress}\r\n            </small>\r\n          </div>\r\n          <hr></hr>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column-reverse\",\r\n              overflow: \"auto\",\r\n              paddingLeft: \"4px\",\r\n              paddingRight: \"4px\",\r\n              paddingTop: \"10px\",\r\n              height: \"61vh\",\r\n            }}\r\n          >\r\n            {this.state.chats?.map((chat, index) => {\r\n              return (\r\n                <p\r\n                  key={index}\r\n                  style={\r\n                    this.state.account !== chat.sender\r\n                      ? senderDesign\r\n                      : receiverDesign\r\n                  }\r\n                >\r\n                  {chat.sender !== \"none\" && (\r\n                    <>\r\n                      <small>\r\n                        <b\r\n                          style={{\r\n                            color:\r\n                              this.state.account !== chat.sender\r\n                                ? \"black\"\r\n                                : \"lightgray\",\r\n                            fontSize: \"10px\",\r\n                            float: \"left\",\r\n                            marginBottom: \"3px\",\r\n                            wordBreak: \"break-word\",\r\n                          }}\r\n                        >\r\n                          {chat.sender}\r\n                        </b>\r\n                      </small>\r\n                      <br></br>\r\n                    </>\r\n                  )}\r\n                  <span style={{ float: \"left\" }}>{chat.message}</span>\r\n                  <br></br>\r\n                  <small\r\n                    style={{\r\n                      float: \"right\",\r\n                      color:\r\n                        this.state.account !== chat.sender\r\n                          ? \"black\"\r\n                          : \"lightgray\",\r\n                      fontSize: \"10px\",\r\n                    }}\r\n                  >\r\n                    {new Date(chat.timeStamp?.toDate()).toUTCString()}\r\n                  </small>\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            height: \"50px\",\r\n\r\n            minWidth: \"3rem\",\r\n          }}\r\n        >\r\n          <Input\r\n            value={this.state.message}\r\n            action={{\r\n              color:\"rgba(31, 30, 30, 0.581)\",\r\n              labelPosition: \"right\",\r\n              icon: \"send\",\r\n              content: \"Send\",\r\n              onClick: (e) => this.sendMessage(e),\r\n            }}\r\n            onChange={(e) => this.setState({ message: e.target.value })}\r\n            style={{\r\n              width: \"100%\",\r\n            }}\r\n            placeholder=\"Enter text...\"\r\n            className=\"design-chat-input\"\r\n            onKeyPress={this.handleKeyPress}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Image } from \"semantic-ui-react\";\r\n\r\nexport default class Nochats extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          textAlign: \"center\",\r\n          justifyItems: \"center\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          marginTop:\"295px\",\r\n          color:\"white\",\r\n        }}\r\n      >\r\n        {/* <Image\r\n          style={{ width: \"70%\" }}\r\n          src=\"https://image.freepik.com/free-vector/chatting-design-concept-with-hand-holding-cellphone_7087-798.jpg\"\r\n        /> */}\r\n        <h1>No Chats</h1>\r\n        <p>\r\n          Feel free to discuss any matters the chats are end to end encrypted.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Table, Header, Image, Grid } from \"semantic-ui-react\";\r\nimport ChatBody from \"../../components/ChatBody\";\r\nimport Nochats from \"../../components/NoChats\";\r\nimport \"./Notifications.css\";\r\nimport { db } from \"../../firebase/firebase\";\r\n\r\nexport default class Notifications extends Component {\r\n  colour = [\"b6e498\", \"61dafb\", \"764abc\", \"83cd29\", \"00d1b2\"];\r\n  state = {\r\n    curr: {},\r\n    conversations: [],\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const web3 = window.web3;\r\n    const accounts = await web3.eth.getAccounts();\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(accounts[0])\r\n      .collection(\"activechats\")\r\n      .onSnapshot((snapshot) =>\r\n        this.setState({ conversations: snapshot.docs.map((doc) => doc.data()) })\r\n      );\r\n    console.log(this.state.conversations);\r\n  };\r\n\r\n  genImg = (name) => {\r\n    return `https://ui-avatars.com/api/?background=${\r\n      this.colour[Math.floor(Math.random() * 5)]\r\n    }&color=fff&name=${name}`;\r\n  };\r\n\r\n  setCurr = (data) => {\r\n    const curr = {\r\n      ...data,\r\n      avatar: this.genImg(data.name),\r\n    };\r\n    this.setState({ curr });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"notifications\">\r\n        <Grid style={{ height: \"100%\", width: \"100%\" }}>\r\n          <Grid.Row>\r\n            <Grid.Column width={6} style={{ borderRight: \"1px solid #c5c6c7\" }}>\r\n              <div className=\"sidechat-container\">\r\n                <Table basic=\"very\" celled collapsing>\r\n                  <Table.Header>\r\n                    <Table.Row className=\"header-row\">\r\n                      <Table.HeaderCell className=\"notification-sidechat\">\r\n                        Coversations\r\n                      </Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <div\r\n                    style={{\r\n                      maxHeight: \"70vh\",\r\n                      overflow: \"auto\",\r\n                      overflowX: \"clip\",\r\n                      paddingRight: \"7px\",\r\n                    }}\r\n                  >\r\n                    <Table.Body className=\"sidechat-body\">\r\n                      {this.state?.conversations?.map((data) => {\r\n                        return (\r\n                          <Table.Row\r\n                            className=\"row-cell-container\"\r\n                            onClick={() => this.setCurr(data)}\r\n                            key={data.ethAddress}\r\n                          >\r\n                            <Table.Cell className=\"header-row-cell\">\r\n                              <Header\r\n                                as=\"h4\"\r\n                                image\r\n                                className=\"notification-sidechat\"\r\n                              >\r\n                                <Image\r\n                                  src={this.genImg(data.name)}\r\n                                  rounded\r\n                                  size=\"mini\"\r\n                                />\r\n                                <Header.Content>\r\n                                  {data.name}\r\n                                  <Header.Subheader className=\"notification-sidechat-subheading\">\r\n                                    <small\r\n                                      style={{\r\n                                        wordBreak: \"break-word\",\r\n                                        fontSize: \"11px\",\r\n                                      }}\r\n                                    >\r\n                                      <em>{data.ethAddress}</em>\r\n                                    </small>\r\n                                  </Header.Subheader>\r\n                                </Header.Content>\r\n                              </Header>\r\n                            </Table.Cell>\r\n                          </Table.Row>\r\n                        );\r\n                      })}\r\n                    </Table.Body>\r\n                  </div>\r\n                </Table>\r\n              </div>\r\n            </Grid.Column>\r\n            <Grid.Column width={10}>\r\n              {this.state.curr.ethAddress ? (\r\n                <ChatBody\r\n                  name={this.state.curr.name}\r\n                  ethAddress={this.state.curr.ethAddress}\r\n                  avatar={this.state.curr.avatar}\r\n                  key={this.state.curr.ethAddress}\r\n                />\r\n              ) : (\r\n                <Nochats />\r\n              )}\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Table, Header, Image, Grid } from \"semantic-ui-react\";\r\nimport ChatBody from \"../../components/ChatBody\";\r\nimport Nochats from \"../../components/NoChats\";\r\nimport \"./Admin.css\";\r\nimport { db } from \"../../firebase/firebase\";\r\n\r\nexport default class NotificationsAdmin extends Component {\r\n  colour = [\"b6e498\", \"61dafb\", \"764abc\", \"83cd29\", \"00d1b2\"];\r\n  state = {\r\n    curr: {},\r\n    conversations: [],\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const web3 = window.web3;\r\n    const accounts = await web3.eth.getAccounts();\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(accounts[0])\r\n      .collection(\"activechats\")\r\n      .onSnapshot((snapshot) =>\r\n        this.setState({ conversations: snapshot.docs.map((doc) => doc.data()) })\r\n      );\r\n    console.log(this.state.conversations);\r\n  };\r\n\r\n  genImg = (name) => {\r\n    return `https://ui-avatars.com/api/?background=${\r\n      this.colour[Math.floor(Math.random() * 5)]\r\n    }&color=fff&name=${name}`;\r\n  };\r\n\r\n  setCurr = (data) => {\r\n    const curr = {\r\n      ...data,\r\n      avatar: this.genImg(data.name),\r\n    };\r\n    this.setState({ curr });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"notifications\">\r\n        <Grid style={{ height: \"100%\", width: \"100%\" }}>\r\n          <Grid.Row>\r\n            <Grid.Column width={6} style={{ borderRight: \"1px solid #c5c6c7\" }}>\r\n              <div className=\"sidechat-container\">\r\n                <Table basic=\"very\" celled collapsing>\r\n                  <Table.Header>\r\n                    <Table.Row className=\"header-row\">\r\n                      <Table.HeaderCell className=\"notification-sidechat\">\r\n                        Chats\r\n                      </Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <div\r\n                    style={{\r\n                      maxHeight: \"70vh\",\r\n                      overflow: \"auto\",\r\n                      overflowX: \"clip\",\r\n                      paddingRight: \"7px\",\r\n                    }}\r\n                  >\r\n                    <Table.Body className=\"sidechat-body\">\r\n                      {this.state?.conversations?.map((data) => {\r\n                        return (\r\n                          <Table.Row\r\n                            className=\"row-cell-container\"\r\n                            onClick={() => this.setCurr(data)}\r\n                            key={data.ethAddress}\r\n                          >\r\n                            <Table.Cell className=\"header-row-cell\">\r\n                              <Header\r\n                                as=\"h4\"\r\n                                image\r\n                                className=\"notification-sidechat\"\r\n                              >\r\n                                <Image\r\n                                  src={this.genImg(data.name)}\r\n                                  rounded\r\n                                  size=\"mini\"\r\n                                />\r\n                                <Header.Content>\r\n                                  {data.name}\r\n                                  <Header.Subheader className=\"notification-sidechat-subheading\">\r\n                                    <small\r\n                                      style={{\r\n                                        wordBreak: \"break-word\",\r\n                                        fontSize: \"11px\",\r\n                                      }}\r\n                                    >\r\n                                      <em>{data.ethAddress}</em>\r\n                                    </small>\r\n                                  </Header.Subheader>\r\n                                </Header.Content>\r\n                              </Header>\r\n                            </Table.Cell>\r\n                          </Table.Row>\r\n                        );\r\n                      })}\r\n                    </Table.Body>\r\n                  </div>\r\n                </Table>\r\n              </div>\r\n            </Grid.Column>\r\n            <Grid.Column width={10}>\r\n              {this.state.curr.ethAddress ? (\r\n                <ChatBody\r\n                  name={this.state.curr.name}\r\n                  ethAddress={this.state.curr.ethAddress}\r\n                  avatar={this.state.curr.avatar}\r\n                  key={this.state.curr.ethAddress}\r\n                  admin\r\n                />\r\n              ) : (\r\n                <Nochats />\r\n              )}\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Table, Header, Image, Grid } from \"semantic-ui-react\";\r\nimport ChatBody from \"../../components/ChatBody\";\r\nimport Nochats from \"../../components/NoChats\";\r\nimport \"./UpdateProfile.css\";\r\nimport { db } from \"../../firebase/firebase\";\r\nimport Admin from \"../../abis/Admin.json\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default class NotificationsEmployee extends Component {\r\n  colour = [\"b6e498\", \"61dafb\", \"764abc\", \"83cd29\", \"00d1b2\"];\r\n  state = {\r\n    curr: {},\r\n    conversations: [],\r\n    admin: \"\",\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const web3 = window.web3;\r\n    const accounts = await web3.eth.getAccounts();\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(accounts[0])\r\n      .collection(\"activechats\")\r\n      .onSnapshot((snapshot) =>\r\n        this.setState({ conversations: snapshot.docs.map((doc) => doc.data()) })\r\n      );\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const owner = await admin?.methods?.owner().call();\r\n      this.setState({\r\n        admin: owner,\r\n      });\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n  };\r\n\r\n  genImg = (name) => {\r\n    return `https://ui-avatars.com/api/?background=${\r\n      this.colour[Math.floor(Math.random() * 5)]\r\n    }&color=fff&name=${name}`;\r\n  };\r\n\r\n  setCurr = (data) => {\r\n    const curr = {\r\n      ...data,\r\n      avatar: this.genImg(data.name),\r\n    };\r\n    this.setState({ curr });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"notifications\">\r\n        <Grid style={{ height: \"100%\", width: \"100%\" }}>\r\n          <Grid.Row>\r\n            <Grid.Column width={6} style={{ borderRight: \"1px solid #c5c6c7\" }}>\r\n              <div className=\"sidechat-container\">\r\n                <Table basic=\"very\" celled collapsing>\r\n                  <Table.Header>\r\n                    <Table.Row className=\"header-row\">\r\n                      <Table.HeaderCell className=\"notification-sidechat\">\r\n                        Coversations\r\n                      </Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <div\r\n                    style={{\r\n                      maxHeight: \"70vh\",\r\n                      overflow: \"auto\",\r\n                      overflowX: \"clip\",\r\n                      paddingRight: \"7px\",\r\n                    }}\r\n                  >\r\n                    <Table.Body className=\"sidechat-body\">\r\n                      {this.state?.conversations?.map((data) => {\r\n                        return (\r\n                          <Table.Row\r\n                            className=\"row-cell-container\"\r\n                            onClick={() => this.setCurr(data)}\r\n                            key={data.ethAddress}\r\n                          >\r\n                            <Table.Cell className=\"header-row-cell\">\r\n                              <Header\r\n                                as=\"h4\"\r\n                                image\r\n                                className=\"notification-sidechat\"\r\n                              >\r\n                                <Image\r\n                                  src={this.genImg(data.name)}\r\n                                  rounded\r\n                                  size=\"mini\"\r\n                                />\r\n                                <Header.Content>\r\n                                  {data.name}\r\n                                  <Header.Subheader className=\"notification-sidechat-subheading\">\r\n                                    <small\r\n                                      style={{\r\n                                        wordBreak: \"break-word\",\r\n                                        fontSize: \"11px\",\r\n                                      }}\r\n                                    >\r\n                                      <em>{data.ethAddress}</em>\r\n                                    </small>\r\n                                  </Header.Subheader>\r\n                                </Header.Content>\r\n                              </Header>\r\n                            </Table.Cell>\r\n                          </Table.Row>\r\n                        );\r\n                      })}\r\n                    </Table.Body>\r\n                  </div>\r\n                </Table>\r\n              </div>\r\n            </Grid.Column>\r\n            <Grid.Column width={10}>\r\n              {this.state.curr.ethAddress ? (\r\n                <ChatBody\r\n                  name={this.state.curr.name}\r\n                  ethAddress={this.state.curr.ethAddress}\r\n                  avatar={this.state.curr.avatar}\r\n                  key={this.state.curr.ethAddress}\r\n                  isEndorsementReq={\r\n                    this.state.curr.ethAddress !== this.state.admin\r\n                  }\r\n                />\r\n              ) : (\r\n                <Nochats />\r\n              )}\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Table, Header, Image, Grid } from \"semantic-ui-react\";\r\nimport ChatBody from \"../../components/ChatBody\";\r\nimport Nochats from \"../../components/NoChats\";\r\nimport \"./Organization.css\";\r\nimport { db } from \"../../firebase/firebase\";\r\nimport Admin from \"../../abis/Admin.json\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default class NotificationsOrg extends Component {\r\n  colour = [\"b6e498\", \"61dafb\", \"764abc\", \"83cd29\", \"00d1b2\"];\r\n  state = {\r\n    curr: {},\r\n    conversations: [],\r\n    admin: \"\",\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const web3 = window.web3;\r\n    const accounts = await web3.eth.getAccounts();\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(accounts[0])\r\n      .collection(\"activechats\")\r\n      .onSnapshot((snapshot) =>\r\n        this.setState({ conversations: snapshot.docs.map((doc) => doc.data()) })\r\n      );\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const owner = await admin?.methods?.owner().call();\r\n      this.setState({\r\n        admin: owner,\r\n      });\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n  };\r\n\r\n  genImg = (name) => {\r\n    return `https://ui-avatars.com/api/?background=${\r\n      this.colour[Math.floor(Math.random() * 5)]\r\n    }&color=fff&name=${name}`;\r\n  };\r\n\r\n  setCurr = (data) => {\r\n    const curr = {\r\n      ...data,\r\n      avatar: this.genImg(data.name),\r\n    };\r\n    this.setState({ curr });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"notifications\">\r\n        <Grid style={{ height: \"100%\", width: \"100%\" }}>\r\n          <Grid.Row>\r\n            <Grid.Column width={6} style={{ borderRight: \"1px solid #c5c6c7\" }}>\r\n              <div className=\"sidechat-container\">\r\n                <Table basic=\"very\" celled collapsing>\r\n                  <Table.Header>\r\n                    <Table.Row className=\"header-row\">\r\n                      <Table.HeaderCell className=\"notification-sidechat\">\r\n                        Coversations\r\n                      </Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <div\r\n                    style={{\r\n                      maxHeight: \"70vh\",\r\n                      overflow: \"auto\",\r\n                      overflowX: \"clip\",\r\n                      paddingRight: \"7px\",\r\n                    }}\r\n                  >\r\n                    <Table.Body className=\"sidechat-body\">\r\n                      {this.state?.conversations?.map((data) => {\r\n                        return (\r\n                          <Table.Row\r\n                            className=\"row-cell-container\"\r\n                            onClick={() => this.setCurr(data)}\r\n                            key={data.ethAddress}\r\n                          >\r\n                            <Table.Cell className=\"header-row-cell\">\r\n                              <Header\r\n                                as=\"h4\"\r\n                                image\r\n                                className=\"notification-sidechat\"\r\n                              >\r\n                                <Image\r\n                                  src={this.genImg(data.name)}\r\n                                  rounded\r\n                                  size=\"mini\"\r\n                                />\r\n                                <Header.Content>\r\n                                  {data.name}\r\n                                  <Header.Subheader className=\"notification-sidechat-subheading\">\r\n                                    <small\r\n                                      style={{\r\n                                        wordBreak: \"break-word\",\r\n                                        fontSize: \"11px\",\r\n                                      }}\r\n                                    >\r\n                                      <em>{data.ethAddress}</em>\r\n                                    </small>\r\n                                  </Header.Subheader>\r\n                                </Header.Content>\r\n                              </Header>\r\n                            </Table.Cell>\r\n                          </Table.Row>\r\n                        );\r\n                      })}\r\n                    </Table.Body>\r\n                  </div>\r\n                </Table>\r\n              </div>\r\n            </Grid.Column>\r\n            <Grid.Column width={10}>\r\n              {this.state.curr.ethAddress ? (\r\n                <ChatBody\r\n                  name={this.state.curr.name}\r\n                  ethAddress={this.state.curr.ethAddress}\r\n                  avatar={this.state.curr.avatar}\r\n                  key={this.state.curr.ethAddress}\r\n                  isEndorsementReq={\r\n                    this.state.curr.ethAddress !== this.state.admin\r\n                  }\r\n                  org\r\n                />\r\n              ) : (\r\n                <Nochats />\r\n              )}\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Web3 from \"web3\";\r\nimport Admin from \"./abis/Admin.json\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport MetaMaskGuide from \"./MetaMaskGuide\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport AdminPageCreate from \"./pages/Admin/CreateUser\";\r\nimport AllEmployees from \"./pages/Admin/AllEmployees\";\r\nimport AllOrganizationEndorser from \"./pages/Admin/AllOrganizationEndorser\";\r\nimport EmployeePage from \"./pages/Employee/Employee\";\r\nimport UpdateProfile from \"./pages/Employee/UpdateProfile\";\r\nimport Organization from \"./pages/OrganizationEndorser/Organization\";\r\nimport EndorseSkill from \"./pages/OrganizationEndorser/EndorseSkill\";\r\nimport Endorse from \"./pages/OrganizationEndorser/EndorseSection\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport GetEmployee from \"./pages/GetRoutes/GetEmployee\";\r\nimport GetOrg from \"./pages/GetRoutes/GetOrg\";\r\nimport NoRole from \"./pages/NoRole/NoRole\";\r\nimport Notifications from \"./pages/NoRole/Notifications\";\r\nimport NotificationsAdmin from \"./pages/Admin/Notifications\";\r\nimport NotificationsEmployee from \"./pages/Employee/Notifications\";\r\nimport NotificationsOrg from \"./pages/OrganizationEndorser/Notifications\";\r\nimport LoadComp from \"./components/LoadComp\";\r\n\r\nfunction App() {\r\n  const [isMeta, setisMeta] = useState(false);\r\n  const [isEmployee, setisEmployee] = useState(false);\r\n  const [account, setaccount] = useState(\"\");\r\n  const [isOrganizationEndorser, setisOrganizationEndorser] = useState(false);\r\n  const [isOwner, setisOwner] = useState(false);\r\n  const [loadcomp, setloadcomp] = useState(false);\r\n\r\n  const loadBlockChainData = async () => {\r\n    const web3 = window.web3;\r\n    const accounts = await web3.eth.getAccounts();\r\n    if (accounts) {\r\n      setaccount(accounts[0]);\r\n    }\r\n    const networkId = await web3.eth.net.getId();\r\n    const AdminData = await Admin.networks[networkId];\r\n    if (AdminData) {\r\n      const admin = await new web3.eth.Contract(Admin.abi, AdminData.address);\r\n      const isEmployee = await admin?.methods?.isEmployee(accounts[0]).call();\r\n      const isOrganizationEndorser = await admin?.methods\r\n        ?.isOrganizationEndorser(accounts[0])\r\n        .call();\r\n      const owner = await admin?.methods?.owner().call();\r\n      setisEmployee(isEmployee);\r\n      setisOrganizationEndorser(isOrganizationEndorser);\r\n      setisOwner(owner === accounts[0]);\r\n    } else {\r\n      toast.error(\"The Admin Contract does not exist on this network!\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const func = async () => {\r\n      setisMeta(true);\r\n      setloadcomp(true);\r\n      if (window.ethereum) {\r\n        await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        window.web3 = await new Web3(window.ethereum);\r\n        await loadBlockChainData();\r\n      } else if (window.web3) {\r\n        window.web3 = await new Web3(window.web3.currentProvider);\r\n        await loadBlockChainData();\r\n      } else {\r\n        setisMeta(false);\r\n      }\r\n      setloadcomp(false);\r\n    };\r\n    func();\r\n    return () => {\r\n      //\r\n    };\r\n  }, []);\r\n\r\n  const adminRoutes = () => {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={AllEmployees} />\r\n        <Route\r\n          path=\"/all-organization-endorser\"\r\n          exact\r\n          component={AllOrganizationEndorser}\r\n        />\r\n        <Route path=\"/create-user\" exact component={AdminPageCreate} />\r\n        <Route path=\"/notifications\" exact component={NotificationsAdmin} />\r\n      </Switch>\r\n    );\r\n  };\r\n\r\n  const employeeRoutes = () => {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={EmployeePage} />\r\n        <Route path=\"/update-profile\" exact component={UpdateProfile} />\r\n        <Route path=\"/notifications\" exact component={NotificationsEmployee} />\r\n      </Switch>\r\n    );\r\n  };\r\n\r\n  const isOrganizationEndorserRoutes = () => {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Organization} />\r\n        <Route path=\"/endorse-skill\" exact component={EndorseSkill} />\r\n        <Route path=\"/endorse-section\" exact component={Endorse} />\r\n        <Route path=\"/notifications\" exact component={NotificationsOrg} />\r\n      </Switch>\r\n    );\r\n  };\r\n\r\n  const noRoleRoutes = () => {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={NoRole} />\r\n        <Route path=\"/notifications\" exact component={Notifications} />\r\n      </Switch>\r\n    );\r\n  };\r\n\r\n  const renderRoutes = () => {\r\n    if (isOwner) return adminRoutes();\r\n    else if (isEmployee) return employeeRoutes();\r\n    else if (isOrganizationEndorser) return isOrganizationEndorserRoutes();\r\n    else return noRoleRoutes();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loadcomp ? (\r\n        <LoadComp />\r\n      ) : isMeta && account !== \"\" ? (\r\n        <BrowserRouter>\r\n          <Navbar />\r\n          <Container>\r\n            <ToastContainer />\r\n            <Switch>\r\n              <Route\r\n                path=\"/getemployee/:employee_address\"\r\n                exact\r\n                component={GetEmployee}\r\n              />\r\n              <Route path=\"/getOrg/:orgAddress\" exact component={GetOrg} />\r\n              {renderRoutes()}\r\n            </Switch>\r\n          </Container>\r\n        </BrowserRouter>\r\n      ) : (\r\n        <MetaMaskGuide />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}